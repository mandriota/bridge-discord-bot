(undo-tree-save-format-version . 1)
"d37b6d75ae4f503a65d0912fea43b23597e2e07c"
[nil nil nil nil (26444 40971 915305 0) 0 nil]
([nil nil ((#("
const ForwarderHookName = \"ForwarderHook\"

const MaxAttachmentDownloadSize = (1 << 20) * 10

type Handler struct {
	ctx context.Context

	rest           rest.Rest
	db             *sql.DB
	recentDelCache sync.Map
}

func (h *Handler) initDB(filePath string) (err error) {
	h.db, err = sql.Open(\"sqlite3\", filePath)
	if err != nil {
		return fmt.Errorf(\"failed to open database: %w\", err)
	}

	tx, err := h.db.BeginTx(h.ctx, nil)
	if err != nil {
		return err
	}
	defer tx.Rollback()

	if err := createMessagesTable(h.ctx, tx); err != nil {
		return fmt.Errorf(\"failed to create table: %w\", err)
	}

	if err := createAuthorsTable(h.ctx, tx); err != nil {
		return fmt.Errorf(\"failed to create table: %w\", err)
	}

	if err := createLinksTable(h.ctx, tx); err != nil {
		return fmt.Errorf(\"failed to create table: %w\", err)
	}
	return tx.Commit()
}

func (h *Handler) initCommands(appID snowflake.ID) error {
	commands := []discord.ApplicationCommandCreate{
		discord.SlashCommandCreate{
			Name:        \"link\",
			Description: \"links current channel to virtual channel\",
			Options: []discord.ApplicationCommandOption{
				discord.ApplicationCommandOptionString{
					Name:        \"virtual_channel_key\",
					Description: \"virtual channel key to link to\",
					Required:    true,
				},
				discord.ApplicationCommandOptionString{
					Name:        \"note\",
					Description: \"note about virtual channel\",
				},
			},
			DefaultMemberPermissions: json.NewNullablePtr(discord.PermissionManageChannels),
			Contexts: []discord.InteractionContextType{discord.InteractionContextTypeGuild},
		},
		discord.SlashCommandCreate{
			Name:        \"unlink\",
			Description: \"unlinks current channel from virtual channel\",
			Options: []discord.ApplicationCommandOption{
				discord.ApplicationCommandOptionString{
					Name:        \"virtual_channel_key\",
					Description: \"virtual channel key to unlink from\",
					Required:    true,
				},
			},
		},
		discord.SlashCommandCreate{
			Name:        \"unlink_all\",
			Description: \"unlinks current channel from all virtual channels\",
		},
		discord.SlashCommandCreate{
			Name:        \"list\",
			Description: \"list virtual channels linked to current channel\",
		},
	}

	_, err := h.rest.SetGlobalCommands(appID, commands)
	return err
}

func (h *Handler) loadOrCreateWebhook(client bot.Client, channelID snowflake.ID) (*discord.IncomingWebhook, error) {
	webhooks, err := client.Rest().GetWebhooks(channelID)
	if err != nil {
		return nil, err
	}

	for _, webhook := range webhooks {
		if incomingWebhook, ok := webhook.(discord.IncomingWebhook); ok && optionToTypeOrZero(incomingWebhook.ApplicationID) == client.ApplicationID() {
			return &incomingWebhook, nil
		}
	}

	return client.Rest().CreateWebhook(channelID, discord.WebhookCreate{
		Name: ForwarderHookName,
	})
}

func (h *Handler) tryWriteReferenceHeader(w *strings.Builder, targetGuildID, targetChannelID snowflake.ID, msgRef *discord.MessageReference) error {
	if msgRef == nil {
		return nil
	}

	relatedMsgID, err := loadDirelatedMessageID(h.ctx, h.db, targetChannelID, *msgRef.MessageID)
	if err != nil {
		return err
	}

	referredMsg, err := h.rest.GetMessage(*msgRef.ChannelID, *msgRef.MessageID)
	if err != nil {
		return err
	}

	referredMsgAuthorID, err := loadAuthorID(h.ctx, h.db, referredMsg.Author.Username)
	if err != nil {
		return err
	}

	referredMsgPreview := referredMsg.Content[skipPrefixedLine(referredMsg.Content, \"-#\"):]
	cutIndicator := \"\"
	referredMsgPreviewWindow := nthRune(referredMsgPreview, 128)
	if referredMsgPreviewWindow < len(referredMsgPreview) {
		cutIndicator = \" **. . .**\"
		referredMsgPreview = referredMsgPreview[:referredMsgPreviewWindow]

		lastSpace := strings.LastIndexFunc(referredMsgPreview, unicode.IsSpace)
		if lastSpace > 0 {
			referredMsgPreview = referredMsgPreview[:lastSpace]
		}
	}
	referredMsgPreview = strings.TrimRightFunc(referredMsgPreview, unicode.IsSpace)

	w.WriteString(\"-# â†µ https://discord.com/channels/\")
	w.WriteString(targetGuildID.String())
	w.WriteByte('/')
	w.WriteString(targetChannelID.String())
	w.WriteByte('/')
	w.WriteString(relatedMsgID.String())
	w.WriteString(\" (<@\")
	w.WriteString(referredMsgAuthorID.String())
	w.WriteString(\">)\\n-# > \")
	w.WriteString(referredMsgPreview)
	w.WriteString(cutIndicator)
	w.WriteByte('\\n')

	return nil
}

func (h *Handler) processMessageAttachments(e *events.GenericGuildMessage, onlyFooter bool) (footer string, attach []uint8, bodies [][]byte) {
	contentCommonFooter := strings.Builder{}
	contentCommonFileAttach := []uint8{}
	contentCommonFileBodies := [][]byte{}

	for i, attach := range e.Message.Attachments {
		if attach.Size > MaxAttachmentDownloadSize {
			contentCommonFooter.WriteByte('\\n')
			contentCommonFooter.WriteString(attach.URL)
			continue
		}

		if onlyFooter {
			continue
		}

		resp, err := http.Get(attach.URL)
		if err != nil {
			e.Client().Logger().Error(\"failed to download attachment\", \"error\", err)
			continue
		}

		text, err := io.ReadAll(resp.Body)
		if err != nil {
			e.Client().Logger().Error(\"failed to download attachment\", \"error\", err)
		} else {
			contentCommonFileBodies = append(contentCommonFileBodies, text)
			contentCommonFileAttach = append(contentCommonFileAttach, uint8(i))
		}
		resp.Body.Close()
	}
	return contentCommonFooter.String(), contentCommonFileAttach, contentCommonFileBodies
}

func (h *Handler) onCommandInteractionCreateLink(e *events.ApplicationCommandInteractionCreate, commandData discord.SlashCommandInteractionData) {
	virtualChannelKey := commandData.String(\"virtual_channel_key\")
	note := commandData.String(\"note\")

	hash := sha256.Sum256([]byte(virtualChannelKey))
	virtualChannelHash := hex.EncodeToString(hash[:])

	query, args := buildInsertLinkQuery(virtualChannelHash, e.Channel().ID(), note)
	_, err := h.db.Exec(query, args...)
	if err != nil {
		e.Client().Logger().Error(\"failed to link channel to virtual channel key\", \"error\", err)
		err := e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"Error\",
				Description: \"Could not link the channel.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		if err != nil {
			e.Client().Logger().Error(\"error sending response\", \"error\", err)
		}
		return
	}

	if err := e.CreateMessage(discord.NewMessageCreateBuilder().
		SetContent(fmt.Sprintf(\"Channel successfully linked to virtual channel `%s`.\", virtualChannelHash)).
		SetEphemeral(true).
		Build(),
	); err != nil {
		e.Client().Logger().Error(\"error sending response\", \"error\", err)
	}
}

func (h *Handler) onCommandInteractionCreateUnlink(e *events.ApplicationCommandInteractionCreate, commandData discord.SlashCommandInteractionData) {
	virtualChannelKey := commandData.String(\"virtual_channel_key\")

	query, args := buildDeleteLinkQuery(virtualChannelKey, e.Channel().ID())
	res, err := h.db.Exec(query, args...)
	if err != nil {
		e.Client().Logger().Error(\"failed to unlink channel from virtual channel key\", \"error\", err)
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"Error\",
				Description: \"Could not unlink the channel.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}

	rowsAffected, _ := res.RowsAffected()
	if rowsAffected == 0 {
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"Error\",
				Description: fmt.Sprintf(\"No link found for virtual channel key `%s`.\", virtualChannelKey),
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}

	e.CreateMessage(discord.NewMessageCreateBuilder().
		SetEmbeds(discord.Embed{
			Title:       \"Success\",
			Description: fmt.Sprintf(\"Channel successfully unlinked from virtual channel key `%s`.\", virtualChannelKey),
			Color:       0x00FF00,
		}).
		SetEphemeral(true).
		Build(),
	)
}

func (h *Handler) onCommandInteractionCreateUnlinkAll(e *events.ApplicationCommandInteractionCreate, _ discord.SlashCommandInteractionData) {
	query, args := buildDeleteAllLinksQuery(e.Channel().ID())

	res, err := h.db.Exec(query, args...)
	if err != nil {
		e.Client().Logger().Error(\"failed to unlink all virtual channels for the channel\", \"error\", err)
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"Error\",
				Description: \"Could not unlink all virtual channels.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}

	rowsAffected, _ := res.RowsAffected()
	if rowsAffected == 0 {
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"No Links Found\",
				Description: \"No links found for this channel.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}

	e.CreateMessage(discord.NewMessageCreateBuilder().
		SetEmbeds(discord.Embed{
			Title:       \"Success\",
			Description: fmt.Sprintf(\"Successfully unlinked %d virtual channel(s) from this channel.\", rowsAffected),
			Color:       0x00FF00,
		}).
		SetEphemeral(true).
		Build(),
	)
}

func (h *Handler) onCommandInteractionCreateList(e *events.ApplicationCommandInteractionCreate, _ discord.SlashCommandInteractionData) {
	query, args := buildSelectVirtualChannelKeyQuery(e.Channel().ID())

	rows, err := h.db.Query(query, args...)
	if err != nil {
		e.Client().Logger().Error(\"failed to list virtual channels for the channel\", \"error\", err)
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"Error\",
				Description: \"Could not retrieve the list of virtual channels.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}
	defer rows.Close()

	virtualChannelKey := \"\"
	note := \"\"

	sb := strings.Builder{}
	for rows.Next() {
		if err := rows.Scan(&virtualChannelKey, &note); err != nil {
			e.Client().Logger().Error(\"failed to scan virtual channel key\", \"error\", err)
			continue
		}
		sb.WriteString(\"- `\")
		sb.WriteString(virtualChannelKey)
		sb.WriteByte('`')
		if note != \"\" {
			sb.WriteString(\" (note: \")
			sb.WriteString(note)
			sb.WriteByte(')')
		}
		sb.WriteByte('\\n')
	}

	if sb.Len() == 0 {
		e.CreateMessage(discord.NewMessageCreateBuilder().
			SetEmbeds(discord.Embed{
				Title:       \"No Virtual Channels Linked\",
				Description: \"No virtual channels are linked to this channel.\",
				Color:       0xFF0000,
			}).
			SetEphemeral(true).
			Build(),
		)
		return
	}

	e.CreateMessage(discord.NewMessageCreateBuilder().
		SetEmbeds(discord.Embed{
			Title:       \"Virtual Channels Linked\",
			Description: fmt.Sprintf(\"Virtual channels linked to this channel:\\n%s\", sb.String()),
			Color:       0x00FF00,
		}).
		SetEphemeral(true).
		Build(),
	)
}

func (h *Handler) onCommandInteractionCreate(e *events.ApplicationCommandInteractionCreate) {
	commandData := e.SlashCommandInteractionData()

	switch commandData.CommandName() {
	case \"link\":
		h.onCommandInteractionCreateLink(e, commandData)
	case \"unlink\":
		h.onCommandInteractionCreateUnlink(e, commandData)
	case \"unlink_all\":
		h.onCommandInteractionCreateUnlinkAll(e, commandData)
	case \"list\":
		h.onCommandInteractionCreateList(e, commandData)
	}
}

func (h *Handler) onMessageCreate(e *events.GuildMessageCreate) {
	if e.Message.Author.Bot {
		return
	}

	targetChannels, err := loadRelatedChannels(h.ctx, h.db, e.ChannelID)
	if err != nil {
		e.Client().Logger().Error(\"failed to load related channels\", \"error\", err)
		return
	}

	tx, err := h.db.BeginTx(h.ctx, nil)
	if err != nil {
		e.Client().Logger().Error(\"failed to begin transaction\", \"error\", err)
		return
	}
	defer tx.Rollback()

	if err := saveAuthorMapping(h.ctx, tx, e.Message.Author.Username, e.Message.Author.ID); err != nil {
		e.Client().Logger().Error(\"failed to save author mapping\", \"error\", err)
	}

	contentCommonFooter, contentCommonFileAttach, contentCommonFileBodies := h.processMessageAttachments(e.GenericGuildMessage, false)

	for _, targetChannelID := range targetChannels {
		forwarderWebhook, err := h.loadOrCreateWebhook(e.Client(), targetChannelID)
		if err != nil {
			e.Client().Logger().Error(\"failed to get/create webhook\", \"error\", err)
			continue
		}

		content := &strings.Builder{}
		if err := h.tryWriteReferenceHeader(content, forwarderWebhook.GuildID, targetChannelID, e.Message.MessageReference); err != nil {
			e.Client().Logger().Error(\"failed to fetch hook message ID\", \"error\", err)
		}
		content.WriteString(e.Message.Content)
		content.WriteString(contentCommonFooter)

		if content.Len() == 0 && len(contentCommonFileAttach) == 0 {
			e.Client().Logger().Error(\"unsupported message\")
			continue
		}

		messageBuilder := discord.NewWebhookMessageCreateBuilder().
			SetAllowedMentions(&discord.AllowedMentions{}).
			SetUsername(e.Message.Author.Username).
			SetContent(content.String())

		if url := e.Message.Author.AvatarURL(); url != nil {
			messageBuilder.SetAvatarURL(*url)
		} else {
			messageBuilder.SetAvatarURL(fmt.Sprintf(\"%s/embed/avatars/%d.png\", discord.CDN, e.Message.Author.ID))
		}

		for i, attachDownloaded := range contentCommonFileAttach {
			attach := e.Message.Attachments[attachDownloaded]
			messageBuilder.AddFile(attach.Filename, optionToTypeOrZero(attach.Description), bytes.NewReader(contentCommonFileBodies[i]))
		}

		forwarderClient := webhook.New(forwarderWebhook.ID(), forwarderWebhook.Token)
		webhookMessage, err := forwarderClient.CreateMessage(messageBuilder.Build())
		if err != nil {
			e.Client().Logger().Error(\"failed to send message via webhook\", \"error\", err)
		}
		forwarderClient.Close(h.ctx)

		if err := saveMessageMapping(h.ctx, tx, e.Message.ChannelID, e.MessageID, webhookMessage.ChannelID, webhookMessage.ID); err != nil {
			e.Client().Logger().Error(\"failed to save message mapping\", \"error\", err)
		}
	}

	if err := tx.Commit(); err != nil {
		e.Client().Logger().Error(\"failed to commit transaction\", \"error\", err)
		return
	}
}

func (h *Handler) onMessageUpdate(e *events.GuildMessageUpdate) {
	if e.Message.Author.Bot {
		return
	}

	targetChannels, err := loadRelatedChannels(h.ctx, h.db, e.ChannelID)
	if err != nil {
		e.Client().Logger().Error(\"failed to load related channels\", \"error\", err)
		return
	}

	contentCommonFooter, _, _ := h.processMessageAttachments(e.GenericGuildMessage, true)

	for _, targetChannelID := range targetChannels {
		relatedMessageID, err := loadRelatedMessageID(h.ctx, h.db, targetChannelID, e.MessageID)
		if err != nil {
			e.Client().Logger().Error(\"failed to fetch related message ID for update\", \"error\", err)
			continue
		}

		forwarderWebhook, err := h.loadOrCreateWebhook(e.Client(), targetChannelID)
		if err != nil {
			e.Client().Logger().Error(\"failed to load or create webhook\", \"error\", err)
			continue
		}

		content := &strings.Builder{}
		if err := h.tryWriteReferenceHeader(content, forwarderWebhook.GuildID, targetChannelID, e.Message.MessageReference); err != nil {
			e.Client().Logger().Error(\"failed to fetch hook message ID\", \"error\", err)
		}
		content.WriteString(e.Message.Content)
		content.WriteString(contentCommonFooter)

		messageBuilder := discord.NewWebhookMessageUpdateBuilder().
			SetContent(content.String())

		forwarderClient := webhook.New(forwarderWebhook.ID(), forwarderWebhook.Token)

		if _, err := forwarderClient.UpdateMessage(relatedMessageID, messageBuilder.Build()); err != nil {
			e.Client().Logger().Error(\"failed to update forwarded message via webhook\", \"error\", err)
		}

		forwarderClient.Close(h.ctx)
	}
}

func (h *Handler) onMessageDelete(e *events.GuildMessageDelete) {
	if e.Message.Author.Bot {
		return
	}

	if _, ok := h.recentDelCache.LoadAndDelete(e.MessageID); ok {
		return
	}

	targetChannels, err := loadRelatedChannels(h.ctx, h.db, e.ChannelID)
	if err != nil {
		e.Client().Logger().Error(\"failed to load related channels\", \"error\", err)
		return
	}

	for _, targetChannelID := range targetChannels {
		relatedMessageID, err := loadRelatedMessageID(h.ctx, h.db, targetChannelID, e.MessageID)
		if err != nil {
			e.Client().Logger().Error(\"failed to fetch related message ID for deletion\", \"error\", err)
			continue
		}

		forwarderWebhook, err := h.loadOrCreateWebhook(e.Client(), targetChannelID)
		if err != nil {
			e.Client().Logger().Error(\"failed to load or create webhook\", \"error\", err)
			continue
		}

		forwarderClient := webhook.New(forwarderWebhook.ID(), forwarderWebhook.Token)

		if err := forwarderClient.DeleteMessage(relatedMessageID); err != nil {
			e.Client().Logger().Error(\"failed to delete forwarded message via webhook\", \"error\", err)
		} else {
			h.recentDelCache.Store(relatedMessageID, nil)
		}

		forwarderClient.Close(h.ctx)
	}
}" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 24 (face font-lock-constant-face fontified t) 24 27 (fontified t) 27 42 (face font-lock-string-face fontified t) 42 44 (fontified t) 44 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 75 (face font-lock-constant-face fontified t) 75 94 (fontified t) 94 98 (face font-lock-keyword-face fontified t) 98 99 (fontified t) 99 106 (face font-lock-type-face fontified t) 106 107 (fontified t) 107 113 (face font-lock-keyword-face fontified t) 113 121 (fontified t) 121 136 (face font-lock-type-face fontified t) 136 154 (fontified t) 154 163 (face font-lock-type-face fontified t) 163 181 (fontified t) 181 187 (face font-lock-type-face fontified t) 187 204 (fontified t) 204 212 (face font-lock-type-face fontified t) 212 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 222 (fontified t) 222 223 (face font-lock-variable-name-face fontified t) 223 225 (fontified t) 225 232 (face font-lock-type-face fontified t) 232 234 (fontified t) 234 240 (face font-lock-function-name-face fontified t) 240 241 (fontified t) 241 249 (face font-lock-variable-name-face fontified t) 249 250 (fontified t) 250 256 (face font-lock-type-face fontified t) 256 259 (fontified t) 259 262 (face font-lock-variable-name-face fontified t) 262 263 (fontified t) 263 268 (face font-lock-type-face fontified t) 268 289 (fontified t) 289 293 (face font-lock-function-name-face fontified t) 293 294 (fontified t) 294 303 (face font-lock-string-face fontified t) 303 316 (fontified t) 316 318 (face font-lock-keyword-face fontified t) 318 326 (fontified t) 326 329 (face font-lock-constant-face fontified t) 329 334 (fontified t) 334 340 (face font-lock-keyword-face fontified t) 340 345 (fontified t) 345 351 (face font-lock-function-name-face fontified t) 351 352 (fontified t) 352 381 (face font-lock-string-face fontified t) 381 393 (fontified t) 393 395 (face font-lock-variable-name-face fontified t) 395 397 (fontified t) 397 400 (face font-lock-variable-name-face fontified t) 400 409 (fontified t) 409 416 (face font-lock-function-name-face fontified t) 416 424 (fontified t) 424 427 (face font-lock-constant-face fontified t) 427 430 (fontified t) 430 432 (face font-lock-keyword-face fontified t) 432 440 (fontified t) 440 443 (face font-lock-constant-face fontified t) 443 448 (fontified t) 448 454 (face font-lock-keyword-face fontified t) 454 463 (fontified t) 463 468 (face font-lock-keyword-face fontified t) 468 472 (fontified t) 472 480 (face font-lock-function-name-face fontified t) 480 485 (fontified t) 485 487 (face font-lock-keyword-face fontified t) 487 488 (fontified t) 488 491 (face font-lock-variable-name-face fontified t) 491 495 (fontified t) 495 514 (face font-lock-function-name-face fontified t) 514 534 (fontified t) 534 537 (face font-lock-constant-face fontified t) 537 542 (fontified t) 542 548 (face font-lock-keyword-face fontified t) 548 553 (fontified t) 553 559 (face font-lock-function-name-face fontified t) 559 560 (fontified t) 560 588 (face font-lock-string-face fontified t) 588 600 (fontified t) 600 602 (face font-lock-keyword-face fontified t) 602 603 (fontified t) 603 606 (face font-lock-variable-name-face fontified t) 606 610 (fontified t) 610 628 (face font-lock-function-name-face fontified t) 628 648 (fontified t) 648 651 (face font-lock-constant-face fontified t) 651 656 (fontified t) 656 662 (face font-lock-keyword-face fontified t) 662 667 (fontified t) 667 673 (face font-lock-function-name-face fontified t) 673 674 (fontified t) 674 702 (face font-lock-string-face fontified t) 702 714 (fontified t) 714 716 (face font-lock-keyword-face fontified t) 716 717 (fontified t) 717 720 (face font-lock-variable-name-face fontified t) 720 724 (fontified t) 724 740 (face font-lock-function-name-face fontified t) 740 760 (fontified t) 760 763 (face font-lock-constant-face fontified t) 763 768 (fontified t) 768 774 (face font-lock-keyword-face fontified t) 774 779 (fontified t) 779 785 (face font-lock-function-name-face fontified t) 785 786 (fontified t) 786 814 (face font-lock-string-face fontified t) 814 825 (fontified t) 825 831 (face font-lock-keyword-face fontified t) 831 835 (fontified t) 835 841 (face font-lock-function-name-face fontified t) 841 847 (fontified t) 847 851 (face font-lock-keyword-face fontified t) 851 853 (fontified t) 853 854 (face font-lock-variable-name-face fontified t) 854 856 (fontified t) 856 863 (face font-lock-type-face fontified t) 863 865 (fontified t) 865 877 (face font-lock-function-name-face fontified t) 877 878 (fontified t) 878 883 (face font-lock-variable-name-face fontified t) 883 884 (fontified t) 884 896 (face font-lock-type-face fontified t) 896 898 (fontified t) 898 903 (face font-lock-type-face fontified t) 903 907 (fontified t) 907 915 (face font-lock-variable-name-face fontified t) 915 921 (fontified t) 921 953 (face font-lock-type-face fontified t) 953 957 (fontified t) 957 968 (face font-lock-type-face fontified t) 968 983 (face font-lock-type-face fontified t) 983 985 (fontified t) 985 988 (fontified t) 988 992 (face font-lock-constant-face fontified t) 992 1001 (fontified t) 1001 1007 (face font-lock-string-face fontified t) 1007 1012 (fontified t) 1012 1023 (face font-lock-constant-face fontified t) 1023 1025 (fontified t) 1025 1067 (face font-lock-string-face fontified t) 1067 1072 (fontified t) 1072 1079 (face font-lock-constant-face fontified t) 1079 1083 (fontified t) 1083 1115 (face font-lock-type-face fontified t) 1115 1121 (fontified t) 1121 1159 (face font-lock-type-face fontified t) 1159 1166 (fontified t) 1166 1170 (face font-lock-constant-face fontified t) 1170 1179 (fontified t) 1179 1200 (face font-lock-string-face fontified t) 1200 1207 (fontified t) 1207 1218 (face font-lock-constant-face fontified t) 1218 1220 (fontified t) 1220 1252 (face font-lock-string-face fontified t) 1252 1259 (fontified t) 1259 1267 (face font-lock-constant-face fontified t) 1267 1272 (fontified t) 1272 1276 (face font-lock-constant-face fontified t) 1276 1289 (fontified t) 1289 1327 (face font-lock-type-face fontified t) 1327 1334 (fontified t) 1334 1338 (face font-lock-constant-face fontified t) 1338 1347 (fontified t) 1347 1353 (face font-lock-string-face fontified t) 1353 1360 (fontified t) 1360 1371 (face font-lock-constant-face fontified t) 1371 1373 (fontified t) 1373 1401 (face font-lock-string-face fontified t) 1401 1419 (fontified t) 1419 1443 (face font-lock-constant-face fontified t) 1443 1450 (fontified t) 1450 1464 (face font-lock-function-name-face fontified t) 1464 1503 (fontified t) 1503 1511 (face font-lock-constant-face fontified t) 1511 1515 (fontified t) 1515 1545 (face font-lock-type-face fontified t) 1545 1591 (fontified t) 1591 1617 (face font-lock-type-face fontified t) 1617 1622 (fontified t) 1622 1626 (face font-lock-constant-face fontified t) 1626 1635 (fontified t) 1635 1643 (face font-lock-string-face fontified t) 1643 1648 (fontified t) 1648 1659 (face font-lock-constant-face fontified t) 1659 1661 (fontified t) 1661 1707 (face font-lock-string-face fontified t) 1707 1712 (fontified t) 1712 1719 (face font-lock-constant-face fontified t) 1719 1723 (fontified t) 1723 1755 (face font-lock-type-face fontified t) 1755 1761 (fontified t) 1761 1799 (face font-lock-type-face fontified t) 1799 1806 (fontified t) 1806 1810 (face font-lock-constant-face fontified t) 1810 1819 (fontified t) 1819 1840 (face font-lock-string-face fontified t) 1840 1847 (fontified t) 1847 1858 (face font-lock-constant-face fontified t) 1858 1860 (fontified t) 1860 1896 (face font-lock-string-face fontified t) 1896 1903 (fontified t) 1903 1911 (face font-lock-constant-face fontified t) 1911 1916 (fontified t) 1916 1920 (face font-lock-constant-face fontified t) 1920 1942 (fontified t) 1942 1968 (face font-lock-type-face fontified t) 1968 1973 (fontified t) 1973 1977 (face font-lock-constant-face fontified t) 1977 1986 (fontified t) 1986 1998 (face font-lock-string-face fontified t) 1998 2003 (fontified t) 2003 2014 (face font-lock-constant-face fontified t) 2014 2016 (fontified t) 2016 2067 (face font-lock-string-face fontified t) 2067 2076 (fontified t) 2076 2102 (face font-lock-type-face fontified t) 2102 2107 (fontified t) 2107 2111 (face font-lock-constant-face fontified t) 2111 2120 (fontified t) 2120 2126 (face font-lock-string-face fontified t) 2126 2131 (fontified t) 2131 2142 (face font-lock-constant-face fontified t) 2142 2144 (fontified t) 2144 2193 (face font-lock-string-face fontified t) 2193 2205 (fontified t) 2205 2206 (face font-lock-variable-name-face fontified t) 2206 2208 (fontified t) 2208 2211 (face font-lock-variable-name-face fontified t) 2211 2222 (fontified t) 2222 2239 (face font-lock-function-name-face fontified t) 2239 2258 (fontified t) 2258 2264 (face font-lock-keyword-face fontified t) 2264 2272 (fontified t) 2272 2276 (face font-lock-keyword-face fontified t) 2276 2278 (fontified t) 2278 2279 (face font-lock-variable-name-face fontified t) 2279 2281 (fontified t) 2281 2288 (face font-lock-type-face fontified t) 2288 2290 (fontified t) 2290 2309 (face font-lock-function-name-face fontified t) 2309 2310 (fontified t) 2310 2316 (face font-lock-variable-name-face fontified t) 2316 2317 (fontified t) 2317 2327 (face font-lock-type-face fontified t) 2327 2329 (fontified t) 2329 2338 (face font-lock-variable-name-face fontified t) 2338 2339 (fontified t) 2339 2351 (face font-lock-type-face fontified t) 2351 2355 (fontified t) 2355 2378 (face font-lock-type-face fontified t) 2378 2380 (fontified t) 2380 2385 (face font-lock-type-face fontified t) 2385 2390 (fontified t) 2390 2398 (face font-lock-variable-name-face fontified t) 2398 2400 (fontified t) 2400 2403 (face font-lock-variable-name-face fontified t) 2403 2414 (fontified t) 2414 2418 (face font-lock-function-name-face fontified t) 2418 2421 (fontified t) 2421 2432 (face font-lock-function-name-face fontified t) 2432 2445 (fontified t) 2445 2447 (face font-lock-keyword-face fontified t) 2447 2455 (fontified t) 2455 2458 (face font-lock-constant-face fontified t) 2458 2463 (fontified t) 2463 2469 (face font-lock-keyword-face fontified t) 2469 2470 (fontified t) 2470 2473 (face font-lock-constant-face fontified t) 2473 2484 (fontified t) 2484 2485 (face font-lock-keyword-face fontified t) 2485 2487 (face font-lock-keyword-face fontified t) 2487 2488 (fontified t) 2488 2489 (face font-lock-variable-name-face fontified t) 2489 2491 (fontified t) 2491 2498 (face font-lock-variable-name-face fontified t) 2498 2502 (fontified t) 2502 2507 (face font-lock-keyword-face fontified t) 2507 2519 (fontified t) 2519 2521 (fontified t) 2521 2523 (face font-lock-keyword-face fontified t) 2523 2524 (fontified t) 2524 2539 (face font-lock-variable-name-face fontified t) 2539 2541 (fontified t) 2541 2543 (face font-lock-variable-name-face fontified t) 2543 2556 (fontified t) 2556 2579 (face font-lock-type-face fontified t) 2579 2588 (fontified t) 2588 2606 (face font-lock-function-name-face fontified t) 2606 2648 (fontified t) 2648 2661 (face font-lock-function-name-face fontified t) 2661 2669 (fontified t) 2669 2675 (face font-lock-keyword-face fontified t) 2675 2694 (fontified t) 2694 2697 (face font-lock-constant-face fontified t) 2697 2707 (fontified t) 2707 2713 (face font-lock-keyword-face fontified t) 2713 2721 (fontified t) 2721 2725 (face font-lock-function-name-face fontified t) 2725 2728 (fontified t) 2728 2741 (face font-lock-function-name-face fontified t) 2741 2753 (fontified t) 2753 2774 (face font-lock-type-face fontified t) 2774 2778 (fontified t) 2778 2782 (face font-lock-constant-face fontified t) 2782 2810 (fontified t) 2810 2814 (face font-lock-keyword-face fontified t) 2814 2816 (fontified t) 2816 2817 (face font-lock-variable-name-face fontified t) 2817 2819 (fontified t) 2819 2826 (face font-lock-type-face fontified t) 2826 2828 (fontified t) 2828 2851 (face font-lock-function-name-face fontified t) 2851 2852 (fontified t) 2852 2853 (face font-lock-variable-name-face fontified t) 2853 2855 (fontified t) 2855 2870 (face font-lock-type-face fontified t) 2870 2872 (fontified t) 2872 2885 (face font-lock-variable-name-face fontified t) 2885 2887 (fontified t) 2887 2902 (face font-lock-variable-name-face fontified t) 2902 2903 (fontified t) 2903 2915 (face font-lock-type-face fontified t) 2915 2917 (fontified t) 2917 2923 (face font-lock-variable-name-face fontified t) 2923 2925 (fontified t) 2925 2949 (face font-lock-type-face fontified t) 2949 2951 (fontified t) 2951 2956 (face font-lock-type-face fontified t) 2956 2960 (fontified t) 2960 2962 (face font-lock-keyword-face fontified t) 2962 2973 (fontified t) 2973 2976 (face font-lock-constant-face fontified t) 2976 2981 (fontified t) 2981 2987 (face font-lock-keyword-face fontified t) 2987 2988 (fontified t) 2988 2991 (face font-lock-constant-face fontified t) 2991 2997 (fontified t) 2997 3009 (face font-lock-variable-name-face fontified t) 3009 3011 (fontified t) 3011 3014 (face font-lock-variable-name-face fontified t) 3014 3018 (fontified t) 3018 3040 (face font-lock-function-name-face fontified t) 3040 3091 (fontified t) 3091 3093 (face font-lock-keyword-face fontified t) 3093 3101 (fontified t) 3101 3104 (face font-lock-constant-face fontified t) 3104 3109 (fontified t) 3109 3115 (face font-lock-keyword-face fontified t) 3115 3125 (fontified t) 3125 3136 (face font-lock-variable-name-face fontified t) 3136 3138 (fontified t) 3138 3141 (face font-lock-variable-name-face fontified t) 3141 3152 (fontified t) 3152 3162 (face font-lock-function-name-face fontified t) 3162 3202 (fontified t) 3202 3204 (face font-lock-keyword-face fontified t) 3204 3212 (fontified t) 3212 3215 (face font-lock-constant-face fontified t) 3215 3220 (fontified t) 3220 3226 (face font-lock-keyword-face fontified t) 3226 3236 (fontified t) 3236 3255 (face font-lock-variable-name-face fontified t) 3255 3257 (fontified t) 3257 3260 (face font-lock-variable-name-face fontified t) 3260 3264 (fontified t) 3264 3276 (face font-lock-function-name-face fontified t) 3276 3320 (fontified t) 3320 3322 (face font-lock-keyword-face fontified t) 3322 3330 (fontified t) 3330 3333 (face font-lock-constant-face fontified t) 3333 3338 (fontified t) 3338 3344 (face font-lock-keyword-face fontified t) 3344 3354 (fontified t) 3354 3372 (face font-lock-variable-name-face fontified t) 3372 3396 (fontified t) 3396 3412 (face font-lock-function-name-face fontified t) 3412 3434 (fontified t) 3434 3438 (face font-lock-string-face fontified t) 3438 3443 (fontified t) 3443 3455 (face font-lock-variable-name-face fontified t) 3455 3459 (fontified t) 3459 3461 (face font-lock-string-face fontified t) 3461 3463 (fontified t) 3463 3487 (face font-lock-variable-name-face fontified t) 3487 3491 (fontified t) 3491 3498 (face font-lock-function-name-face fontified t) 3498 3525 (fontified t) 3525 3527 (face font-lock-keyword-face fontified t) 3527 3555 (fontified t) 3555 3558 (face font-lock-builtin-face fontified t) 3558 3598 (fontified t) 3598 3610 (face font-lock-string-face fontified t) 3610 3683 (fontified t) 3683 3692 (face font-lock-variable-name-face fontified t) 3692 3704 (fontified t) 3704 3717 (face font-lock-function-name-face fontified t) 3717 3757 (fontified t) 3757 3759 (face font-lock-keyword-face fontified t) 3759 3868 (fontified t) 3868 3881 (face font-lock-function-name-face fontified t) 3881 3923 (fontified t) 3923 3934 (face font-lock-function-name-face fontified t) 3934 3935 (fontified t) 3935 3971 (face font-lock-string-face fontified t) 3971 3976 (fontified t) 3976 3987 (face font-lock-function-name-face fontified t) 3987 4002 (fontified t) 4002 4008 (face font-lock-function-name-face fontified t) 4008 4015 (fontified t) 4015 4019 (face font-lock-function-name-face fontified t) 4019 4024 (face font-lock-function-name-face fontified t) 4024 4025 (fontified t) 4025 4028 (face font-lock-string-face fontified t) 4028 4030 (fontified t) 4030 4033 (fontified t) 4033 4044 (face font-lock-function-name-face fontified t) 4044 4061 (fontified t) 4061 4067 (face font-lock-function-name-face fontified t) 4067 4074 (fontified t) 4074 4083 (face font-lock-function-name-face fontified t) 4083 4084 (fontified t) 4084 4087 (face font-lock-string-face fontified t) 4087 4092 (fontified t) 4092 4103 (face font-lock-function-name-face fontified t) 4103 4117 (fontified t) 4117 4123 (face font-lock-function-name-face fontified t) 4123 4130 (fontified t) 4130 4141 (face font-lock-function-name-face fontified t) 4141 4142 (fontified t) 4142 4148 (face font-lock-string-face fontified t) 4148 4153 (fontified t) 4153 4164 (face font-lock-function-name-face fontified t) 4164 4185 (fontified t) 4185 4191 (face font-lock-function-name-face fontified t) 4191 4198 (fontified t) 4198 4209 (face font-lock-function-name-face fontified t) 4209 4210 (fontified t) 4210 4213 (face font-lock-string-face fontified t) 4213 4214 (face font-lock-string-face syntax-table (9) fontified t) 4214 4221 (face font-lock-string-face fontified t) 4221 4226 (fontified t) 4226 4237 (face font-lock-function-name-face fontified t) 4237 4261 (fontified t) 4261 4272 (face font-lock-function-name-face fontified t) 4272 4290 (fontified t) 4290 4299 (face font-lock-function-name-face fontified t) 4299 4300 (fontified t) 4300 4301 (face font-lock-string-face fontified t) 4301 4302 (face font-lock-string-face syntax-table (9) fontified t) 4302 4304 (face font-lock-string-face fontified t) 4304 4308 (fontified t) 4308 4314 (face font-lock-keyword-face fontified t) 4314 4315 (fontified t) 4315 4318 (face font-lock-constant-face fontified t) 4318 4322 (fontified t) 4322 4326 (face font-lock-keyword-face fontified t) 4326 4328 (fontified t) 4328 4329 (face font-lock-variable-name-face fontified t) 4329 4331 (fontified t) 4331 4338 (face font-lock-type-face fontified t) 4338 4340 (fontified t) 4340 4365 (face font-lock-function-name-face fontified t) 4365 4366 (fontified t) 4366 4367 (face font-lock-variable-name-face fontified t) 4367 4369 (fontified t) 4369 4395 (face font-lock-type-face fontified t) 4395 4397 (fontified t) 4397 4407 (face font-lock-variable-name-face fontified t) 4407 4408 (fontified t) 4408 4412 (face font-lock-type-face fontified t) 4412 4415 (fontified t) 4415 4421 (face font-lock-variable-name-face fontified t) 4421 4422 (fontified t) 4422 4428 (face font-lock-type-face fontified t) 4428 4430 (fontified t) 4430 4436 (face font-lock-variable-name-face fontified t) 4436 4439 (fontified t) 4439 4444 (face font-lock-type-face fontified t) 4444 4446 (fontified t) 4446 4452 (face font-lock-variable-name-face fontified t) 4452 4457 (fontified t) 4457 4461 (face font-lock-type-face fontified t) 4461 4466 (fontified t) 4466 4485 (face font-lock-variable-name-face fontified t) 4485 4489 (fontified t) 4489 4504 (face font-lock-type-face fontified t) 4504 4508 (fontified t) 4508 4531 (face font-lock-variable-name-face fontified t) 4531 4537 (fontified t) 4537 4542 (face font-lock-type-face fontified t) 4542 4546 (fontified t) 4546 4569 (face font-lock-variable-name-face fontified t) 4569 4577 (fontified t) 4577 4581 (face font-lock-type-face fontified t) 4581 4586 (fontified t) 4586 4589 (face font-lock-keyword-face fontified t) 4589 4590 (fontified t) 4590 4591 (face font-lock-variable-name-face fontified t) 4591 4593 (fontified t) 4593 4599 (face font-lock-variable-name-face fontified t) 4599 4603 (fontified t) 4603 4608 (face font-lock-keyword-face fontified t) 4608 4635 (fontified t) 4635 4637 (face font-lock-keyword-face fontified t) 4637 4703 (fontified t) 4703 4712 (face font-lock-function-name-face fontified t) 4712 4713 (fontified t) 4713 4714 (face font-lock-string-face fontified t) 4714 4715 (face font-lock-string-face syntax-table (9) fontified t) 4715 4717 (face font-lock-string-face fontified t) 4717 4742 (fontified t) 4742 4753 (face font-lock-function-name-face fontified t) 4753 4769 (fontified t) 4769 4777 (face font-lock-keyword-face fontified t) 4777 4785 (fontified t) 4785 4787 (face font-lock-keyword-face fontified t) 4787 4804 (fontified t) 4804 4812 (face font-lock-keyword-face fontified t) 4812 4820 (fontified t) 4820 4824 (face font-lock-variable-name-face fontified t) 4824 4826 (fontified t) 4826 4829 (face font-lock-variable-name-face fontified t) 4829 4838 (fontified t) 4838 4841 (face font-lock-function-name-face fontified t) 4841 4856 (fontified t) 4856 4858 (face font-lock-keyword-face fontified t) 4858 4866 (fontified t) 4866 4869 (face font-lock-constant-face fontified t) 4869 4877 (fontified t) 4877 4883 (face font-lock-function-name-face fontified t) 4883 4886 (fontified t) 4886 4892 (face font-lock-function-name-face fontified t) 4892 4895 (fontified t) 4895 4900 (face font-lock-function-name-face fontified t) 4900 4901 (fontified t) 4901 4932 (face font-lock-string-face fontified t) 4932 4934 (fontified t) 4934 4941 (face font-lock-string-face fontified t) 4941 4951 (fontified t) 4951 4959 (face font-lock-keyword-face fontified t) 4959 4967 (fontified t) 4967 4971 (face font-lock-variable-name-face fontified t) 4971 4973 (fontified t) 4973 4976 (face font-lock-variable-name-face fontified t) 4976 4983 (fontified t) 4983 4990 (face font-lock-function-name-face fontified t) 4990 5004 (fontified t) 5004 5006 (face font-lock-keyword-face fontified t) 5006 5014 (fontified t) 5014 5017 (face font-lock-constant-face fontified t) 5017 5025 (fontified t) 5025 5031 (face font-lock-function-name-face fontified t) 5031 5034 (fontified t) 5034 5040 (face font-lock-function-name-face fontified t) 5040 5043 (fontified t) 5043 5048 (face font-lock-function-name-face fontified t) 5048 5049 (fontified t) 5049 5080 (face font-lock-string-face fontified t) 5080 5082 (fontified t) 5082 5089 (face font-lock-string-face fontified t) 5089 5100 (fontified t) 5100 5104 (face font-lock-keyword-face fontified t) 5104 5136 (fontified t) 5136 5142 (face font-lock-builtin-face fontified t) 5142 5203 (fontified t) 5203 5209 (face font-lock-builtin-face fontified t) 5209 5235 (fontified t) 5235 5240 (face font-lock-function-name-face fontified t) 5240 5261 (fontified t) 5261 5266 (face font-lock-function-name-face fontified t) 5266 5273 (fontified t) 5273 5279 (face font-lock-keyword-face fontified t) 5279 5300 (fontified t) 5300 5306 (face font-lock-function-name-face fontified t) 5306 5362 (fontified t) 5362 5366 (face font-lock-keyword-face fontified t) 5366 5368 (fontified t) 5368 5369 (face font-lock-variable-name-face fontified t) 5369 5371 (fontified t) 5371 5378 (face font-lock-type-face fontified t) 5378 5380 (fontified t) 5380 5410 (face font-lock-function-name-face fontified t) 5410 5411 (fontified t) 5411 5412 (face font-lock-variable-name-face fontified t) 5412 5414 (fontified t) 5414 5456 (face font-lock-type-face fontified t) 5456 5458 (fontified t) 5458 5469 (face font-lock-variable-name-face fontified t) 5469 5470 (fontified t) 5470 5505 (face font-lock-type-face fontified t) 5505 5510 (fontified t) 5510 5527 (face font-lock-variable-name-face fontified t) 5527 5530 (fontified t) 5530 5543 (fontified t) 5543 5549 (face font-lock-function-name-face fontified t) 5549 5550 (fontified t) 5550 5571 (face font-lock-string-face fontified t) 5571 5573 (fontified t) 5573 5574 (fontified t) 5574 5578 (face font-lock-variable-name-face fontified t) 5578 5594 (fontified t) 5594 5600 (face font-lock-function-name-face fontified t) 5600 5601 (fontified t) 5601 5607 (face font-lock-string-face fontified t) 5607 5611 (fontified t) 5611 5615 (face font-lock-variable-name-face fontified t) 5615 5626 (fontified t) 5626 5632 (face font-lock-function-name-face fontified t) 5632 5635 (fontified t) 5635 5639 (face font-lock-function-name-face fontified t) 5639 5661 (fontified t) 5661 5679 (face font-lock-variable-name-face fontified t) 5679 5687 (fontified t) 5687 5701 (face font-lock-function-name-face fontified t) 5701 5713 (fontified t) 5713 5718 (face font-lock-variable-name-face fontified t) 5718 5720 (fontified t) 5720 5724 (face font-lock-variable-name-face fontified t) 5724 5728 (fontified t) 5728 5748 (face font-lock-function-name-face fontified t) 5748 5771 (fontified t) 5771 5778 (face font-lock-function-name-face fontified t) 5778 5781 (fontified t) 5781 5783 (face font-lock-function-name-face fontified t) 5783 5794 (fontified t) 5794 5795 (face font-lock-variable-name-face fontified t) 5795 5797 (fontified t) 5797 5800 (face font-lock-variable-name-face fontified t) 5800 5809 (fontified t) 5809 5813 (face font-lock-function-name-face fontified t) 5813 5831 (fontified t) 5831 5833 (face font-lock-keyword-face fontified t) 5833 5841 (fontified t) 5841 5844 (face font-lock-constant-face fontified t) 5844 5851 (fontified t) 5851 5857 (face font-lock-function-name-face fontified t) 5857 5860 (fontified t) 5860 5866 (face font-lock-function-name-face fontified t) 5866 5869 (fontified t) 5869 5874 (face font-lock-function-name-face fontified t) 5874 5875 (fontified t) 5875 5922 (face font-lock-string-face fontified t) 5922 5924 (fontified t) 5924 5931 (face font-lock-string-face fontified t) 5931 5940 (fontified t) 5940 5943 (face font-lock-variable-name-face fontified t) 5943 5949 (fontified t) 5949 5962 (face font-lock-function-name-face fontified t) 5962 5971 (fontified t) 5971 5994 (face font-lock-function-name-face fontified t) 5994 6001 (fontified t) 6001 6010 (face font-lock-function-name-face fontified t) 6010 6011 (fontified t) 6011 6024 (face font-lock-type-face fontified t) 6024 6030 (fontified t) 6030 6035 (face font-lock-constant-face fontified t) 6035 6043 (fontified t) 6043 6050 (face font-lock-string-face fontified t) 6050 6056 (fontified t) 6056 6067 (face font-lock-constant-face fontified t) 6067 6069 (fontified t) 6069 6098 (face font-lock-string-face fontified t) 6098 6104 (fontified t) 6104 6109 (face font-lock-constant-face fontified t) 6109 6137 (fontified t) 6137 6149 (face font-lock-function-name-face fontified t) 6149 6150 (fontified t) 6150 6154 (face font-lock-constant-face fontified t) 6154 6160 (fontified t) 6160 6165 (face font-lock-function-name-face fontified t) 6165 6175 (fontified t) 6175 6177 (face font-lock-keyword-face fontified t) 6177 6185 (fontified t) 6185 6188 (face font-lock-constant-face fontified t) 6188 6196 (fontified t) 6196 6202 (face font-lock-function-name-face fontified t) 6202 6205 (fontified t) 6205 6211 (face font-lock-function-name-face fontified t) 6211 6214 (fontified t) 6214 6219 (face font-lock-function-name-face fontified t) 6219 6220 (fontified t) 6220 6244 (face font-lock-string-face fontified t) 6244 6246 (fontified t) 6246 6253 (face font-lock-string-face fontified t) 6253 6266 (fontified t) 6266 6272 (face font-lock-keyword-face fontified t) 6272 6278 (fontified t) 6278 6280 (face font-lock-keyword-face fontified t) 6280 6281 (fontified t) 6281 6284 (face font-lock-variable-name-face fontified t) 6284 6290 (fontified t) 6290 6303 (face font-lock-function-name-face fontified t) 6303 6312 (fontified t) 6312 6335 (face font-lock-function-name-face fontified t) 6335 6341 (fontified t) 6341 6351 (face font-lock-function-name-face fontified t) 6351 6356 (fontified t) 6356 6363 (face font-lock-function-name-face fontified t) 6363 6364 (fontified t) 6364 6418 (face font-lock-string-face fontified t) 6418 6444 (fontified t) 6444 6456 (face font-lock-function-name-face fontified t) 6456 6457 (fontified t) 6457 6461 (face font-lock-constant-face fontified t) 6461 6466 (fontified t) 6466 6471 (face font-lock-function-name-face fontified t) 6471 6486 (fontified t) 6486 6489 (face font-lock-constant-face fontified t) 6489 6496 (fontified t) 6496 6502 (face font-lock-function-name-face fontified t) 6502 6505 (fontified t) 6505 6511 (face font-lock-function-name-face fontified t) 6511 6514 (fontified t) 6514 6519 (face font-lock-function-name-face fontified t) 6519 6520 (fontified t) 6520 6544 (face font-lock-string-face fontified t) 6544 6546 (fontified t) 6546 6553 (face font-lock-string-face fontified t) 6553 6566 (fontified t) 6566 6570 (face font-lock-keyword-face fontified t) 6570 6572 (fontified t) 6572 6573 (face font-lock-variable-name-face fontified t) 6573 6575 (fontified t) 6575 6582 (face font-lock-type-face fontified t) 6582 6584 (fontified t) 6584 6616 (face font-lock-function-name-face fontified t) 6616 6617 (fontified t) 6617 6618 (face font-lock-variable-name-face fontified t) 6618 6620 (fontified t) 6620 6662 (face font-lock-type-face fontified t) 6662 6664 (fontified t) 6664 6675 (face font-lock-variable-name-face fontified t) 6675 6676 (fontified t) 6676 6711 (face font-lock-type-face fontified t) 6711 6716 (fontified t) 6716 6733 (face font-lock-variable-name-face fontified t) 6733 6749 (fontified t) 6749 6755 (face font-lock-function-name-face fontified t) 6755 6756 (fontified t) 6756 6777 (face font-lock-string-face fontified t) 6777 6781 (fontified t) 6781 6786 (face font-lock-variable-name-face fontified t) 6786 6788 (fontified t) 6788 6792 (face font-lock-variable-name-face fontified t) 6792 6796 (fontified t) 6796 6816 (face font-lock-function-name-face fontified t) 6816 6838 (fontified t) 6838 6845 (face font-lock-function-name-face fontified t) 6845 6848 (fontified t) 6848 6850 (face font-lock-function-name-face fontified t) 6850 6855 (fontified t) 6855 6858 (face font-lock-variable-name-face fontified t) 6858 6860 (fontified t) 6860 6863 (face font-lock-variable-name-face fontified t) 6863 6872 (fontified t) 6872 6876 (face font-lock-function-name-face fontified t) 6876 6894 (fontified t) 6894 6896 (face font-lock-keyword-face fontified t) 6896 6904 (fontified t) 6904 6907 (face font-lock-constant-face fontified t) 6907 6914 (fontified t) 6914 6920 (face font-lock-function-name-face fontified t) 6920 6923 (fontified t) 6923 6929 (face font-lock-function-name-face fontified t) 6929 6932 (fontified t) 6932 6937 (face font-lock-function-name-face fontified t) 6937 6938 (fontified t) 6938 6989 (face font-lock-string-face fontified t) 6989 6991 (fontified t) 6991 6998 (face font-lock-string-face fontified t) 6998 7009 (fontified t) 7009 7022 (face font-lock-function-name-face fontified t) 7022 7031 (fontified t) 7031 7054 (face font-lock-function-name-face fontified t) 7054 7061 (fontified t) 7061 7070 (face font-lock-function-name-face fontified t) 7070 7071 (fontified t) 7071 7073 (face font-lock-type-face fontified t) 7073 7084 (face font-lock-type-face fontified t) 7084 7086 (fontified t) 7086 7090 (fontified t) 7090 7095 (face font-lock-constant-face fontified t) 7095 7103 (fontified t) 7103 7110 (face font-lock-string-face fontified t) 7110 7116 (fontified t) 7116 7127 (face font-lock-constant-face fontified t) 7127 7129 (fontified t) 7129 7160 (face font-lock-string-face fontified t) 7160 7166 (fontified t) 7166 7171 (face font-lock-constant-face fontified t) 7171 7199 (fontified t) 7199 7211 (face font-lock-function-name-face fontified t) 7211 7212 (fontified t) 7212 7216 (face font-lock-constant-face fontified t) 7216 7222 (fontified t) 7222 7227 (face font-lock-function-name-face fontified t) 7227 7237 (fontified t) 7237 7243 (face font-lock-keyword-face fontified t) 7243 7249 (fontified t) 7249 7261 (face font-lock-variable-name-face fontified t) 7261 7263 (fontified t) 7263 7264 (face font-lock-variable-name-face fontified t) 7264 7272 (fontified t) 7272 7284 (face font-lock-function-name-face fontified t) 7284 7288 (fontified t) 7288 7290 (face font-lock-keyword-face fontified t) 7290 7315 (fontified t) 7315 7328 (face font-lock-function-name-face fontified t) 7328 7337 (fontified t) 7337 7360 (face font-lock-function-name-face fontified t) 7360 7367 (fontified t) 7367 7376 (face font-lock-function-name-face fontified t) 7376 7377 (fontified t) 7377 7390 (face font-lock-type-face fontified t) 7390 7396 (fontified t) 7396 7401 (face font-lock-constant-face fontified t) 7401 7409 (fontified t) 7409 7416 (face font-lock-string-face fontified t) 7416 7422 (fontified t) 7422 7433 (face font-lock-constant-face fontified t) 7433 7439 (fontified t) 7439 7446 (face font-lock-function-name-face fontified t) 7446 7447 (fontified t) 7447 7492 (face font-lock-string-face fontified t) 7492 7518 (fontified t) 7518 7523 (face font-lock-constant-face fontified t) 7523 7551 (fontified t) 7551 7563 (face font-lock-function-name-face fontified t) 7563 7564 (fontified t) 7564 7568 (face font-lock-constant-face fontified t) 7568 7574 (fontified t) 7574 7579 (face font-lock-function-name-face fontified t) 7579 7589 (fontified t) 7589 7595 (face font-lock-keyword-face fontified t) 7595 7603 (fontified t) 7603 7616 (face font-lock-function-name-face fontified t) 7616 7625 (fontified t) 7625 7648 (face font-lock-function-name-face fontified t) 7648 7654 (fontified t) 7654 7663 (face font-lock-function-name-face fontified t) 7663 7664 (fontified t) 7664 7677 (face font-lock-type-face fontified t) 7677 7682 (fontified t) 7682 7687 (face font-lock-constant-face fontified t) 7687 7695 (fontified t) 7695 7704 (face font-lock-string-face fontified t) 7704 7709 (fontified t) 7709 7720 (face font-lock-constant-face fontified t) 7720 7726 (fontified t) 7726 7733 (face font-lock-function-name-face fontified t) 7733 7734 (fontified t) 7734 7796 (face font-lock-string-face fontified t) 7796 7821 (fontified t) 7821 7826 (face font-lock-constant-face fontified t) 7826 7852 (fontified t) 7852 7864 (face font-lock-function-name-face fontified t) 7864 7865 (fontified t) 7865 7869 (face font-lock-constant-face fontified t) 7869 7874 (fontified t) 7874 7879 (face font-lock-function-name-face fontified t) 7879 7889 (fontified t) 7889 7893 (face font-lock-keyword-face fontified t) 7893 7895 (fontified t) 7895 7896 (face font-lock-variable-name-face fontified t) 7896 7898 (fontified t) 7898 7905 (face font-lock-type-face fontified t) 7905 7907 (fontified t) 7907 7942 (face font-lock-function-name-face fontified t) 7942 7943 (fontified t) 7943 7944 (face font-lock-variable-name-face fontified t) 7944 7946 (fontified t) 7946 7988 (face font-lock-type-face fontified t) 7988 7990 (fontified t) 7990 7991 (face font-lock-variable-name-face fontified t) 7991 7992 (fontified t) 7992 8027 (face font-lock-type-face fontified t) 8027 8032 (fontified t) 8032 8037 (face font-lock-variable-name-face fontified t) 8037 8039 (fontified t) 8039 8043 (face font-lock-variable-name-face fontified t) 8043 8047 (fontified t) 8047 8071 (face font-lock-function-name-face fontified t) 8071 8074 (fontified t) 8074 8081 (face font-lock-function-name-face fontified t) 8081 8084 (fontified t) 8084 8086 (face font-lock-function-name-face fontified t) 8086 8092 (fontified t) 8092 8095 (face font-lock-variable-name-face fontified t) 8095 8097 (fontified t) 8097 8100 (face font-lock-variable-name-face fontified t) 8100 8109 (fontified t) 8109 8113 (face font-lock-function-name-face fontified t) 8113 8131 (fontified t) 8131 8133 (face font-lock-keyword-face fontified t) 8133 8141 (fontified t) 8141 8144 (face font-lock-constant-face fontified t) 8144 8151 (fontified t) 8151 8157 (face font-lock-function-name-face fontified t) 8157 8160 (fontified t) 8160 8166 (face font-lock-function-name-face fontified t) 8166 8169 (fontified t) 8169 8174 (face font-lock-function-name-face fontified t) 8174 8175 (fontified t) 8175 8230 (face font-lock-string-face fontified t) 8230 8232 (fontified t) 8232 8239 (face font-lock-string-face fontified t) 8239 8250 (fontified t) 8250 8263 (face font-lock-function-name-face fontified t) 8263 8272 (fontified t) 8272 8295 (face font-lock-function-name-face fontified t) 8295 8302 (fontified t) 8302 8311 (face font-lock-function-name-face fontified t) 8311 8312 (fontified t) 8312 8325 (face font-lock-type-face fontified t) 8325 8331 (fontified t) 8331 8336 (face font-lock-constant-face fontified t) 8336 8344 (fontified t) 8344 8351 (face font-lock-string-face fontified t) 8351 8357 (fontified t) 8357 8368 (face font-lock-constant-face fontified t) 8368 8370 (fontified t) 8370 8410 (face font-lock-string-face fontified t) 8410 8416 (fontified t) 8416 8421 (face font-lock-constant-face fontified t) 8421 8449 (fontified t) 8449 8461 (face font-lock-function-name-face fontified t) 8461 8462 (fontified t) 8462 8466 (face font-lock-constant-face fontified t) 8466 8472 (fontified t) 8472 8477 (face font-lock-function-name-face fontified t) 8477 8487 (fontified t) 8487 8493 (face font-lock-keyword-face fontified t) 8493 8499 (fontified t) 8499 8511 (face font-lock-variable-name-face fontified t) 8511 8513 (fontified t) 8513 8514 (face font-lock-variable-name-face fontified t) 8514 8522 (fontified t) 8522 8534 (face font-lock-function-name-face fontified t) 8534 8538 (fontified t) 8538 8540 (face font-lock-keyword-face fontified t) 8540 8565 (fontified t) 8565 8578 (face font-lock-function-name-face fontified t) 8578 8586 (fontified t) 8586 8587 (fontified t) 8587 8610 (face font-lock-function-name-face fontified t) 8610 8614 (fontified t) 8614 8617 (fontified t) 8617 8626 (face font-lock-function-name-face fontified t) 8626 8627 (fontified t) 8627 8640 (face font-lock-type-face fontified t) 8640 8646 (fontified t) 8646 8651 (face font-lock-constant-face fontified t) 8651 8659 (fontified t) 8659 8675 (face font-lock-string-face fontified t) 8675 8681 (fontified t) 8681 8692 (face font-lock-constant-face fontified t) 8692 8694 (fontified t) 8694 8728 (face font-lock-string-face fontified t) 8728 8734 (fontified t) 8734 8739 (face font-lock-constant-face fontified t) 8739 8767 (fontified t) 8767 8779 (face font-lock-function-name-face fontified t) 8779 8780 (fontified t) 8780 8784 (face font-lock-constant-face fontified t) 8784 8790 (fontified t) 8790 8795 (face font-lock-function-name-face fontified t) 8795 8805 (fontified t) 8805 8811 (face font-lock-keyword-face fontified t) 8811 8819 (fontified t) 8819 8832 (face font-lock-function-name-face fontified t) 8832 8841 (fontified t) 8841 8864 (face font-lock-function-name-face fontified t) 8864 8870 (fontified t) 8870 8879 (face font-lock-function-name-face fontified t) 8879 8880 (fontified t) 8880 8893 (face font-lock-type-face fontified t) 8893 8898 (fontified t) 8898 8903 (face font-lock-constant-face fontified t) 8903 8911 (fontified t) 8911 8920 (face font-lock-string-face fontified t) 8920 8925 (fontified t) 8925 8936 (face font-lock-constant-face fontified t) 8936 8942 (fontified t) 8942 8949 (face font-lock-function-name-face fontified t) 8949 8950 (fontified t) 8950 9014 (face font-lock-string-face fontified t) 9014 9034 (fontified t) 9034 9039 (face font-lock-constant-face fontified t) 9039 9065 (fontified t) 9065 9077 (face font-lock-function-name-face fontified t) 9077 9078 (fontified t) 9078 9082 (face font-lock-constant-face fontified t) 9082 9087 (fontified t) 9087 9092 (face font-lock-function-name-face fontified t) 9092 9102 (fontified t) 9102 9106 (face font-lock-keyword-face fontified t) 9106 9108 (fontified t) 9108 9109 (face font-lock-variable-name-face fontified t) 9109 9111 (fontified t) 9111 9118 (face font-lock-type-face fontified t) 9118 9120 (fontified t) 9120 9150 (face font-lock-function-name-face fontified t) 9150 9151 (fontified t) 9151 9152 (face font-lock-variable-name-face fontified t) 9152 9154 (fontified t) 9154 9196 (face font-lock-type-face fontified t) 9196 9198 (fontified t) 9198 9199 (face font-lock-variable-name-face fontified t) 9199 9200 (fontified t) 9200 9235 (face font-lock-type-face fontified t) 9235 9240 (fontified t) 9240 9245 (face font-lock-variable-name-face fontified t) 9245 9247 (fontified t) 9247 9251 (face font-lock-variable-name-face fontified t) 9251 9255 (fontified t) 9255 9288 (face font-lock-function-name-face fontified t) 9288 9291 (fontified t) 9291 9298 (face font-lock-function-name-face fontified t) 9298 9301 (fontified t) 9301 9303 (face font-lock-function-name-face fontified t) 9303 9309 (fontified t) 9309 9313 (face font-lock-variable-name-face fontified t) 9313 9315 (fontified t) 9315 9318 (face font-lock-variable-name-face fontified t) 9318 9327 (fontified t) 9327 9332 (face font-lock-function-name-face fontified t) 9332 9350 (fontified t) 9350 9352 (face font-lock-keyword-face fontified t) 9352 9360 (fontified t) 9360 9363 (face font-lock-constant-face fontified t) 9363 9370 (fontified t) 9370 9376 (face font-lock-function-name-face fontified t) 9376 9379 (fontified t) 9379 9385 (face font-lock-function-name-face fontified t) 9385 9388 (fontified t) 9388 9393 (face font-lock-function-name-face fontified t) 9393 9394 (fontified t) 9394 9443 (face font-lock-string-face fontified t) 9443 9445 (fontified t) 9445 9452 (face font-lock-string-face fontified t) 9452 9463 (fontified t) 9463 9476 (face font-lock-function-name-face fontified t) 9476 9485 (fontified t) 9485 9508 (face font-lock-function-name-face fontified t) 9508 9515 (fontified t) 9515 9524 (face font-lock-function-name-face fontified t) 9524 9525 (fontified t) 9525 9538 (face font-lock-type-face fontified t) 9538 9544 (fontified t) 9544 9549 (face font-lock-constant-face fontified t) 9549 9557 (fontified t) 9557 9564 (face font-lock-string-face fontified t) 9564 9570 (fontified t) 9570 9581 (face font-lock-constant-face fontified t) 9581 9583 (fontified t) 9583 9633 (face font-lock-string-face fontified t) 9633 9639 (fontified t) 9639 9644 (face font-lock-constant-face fontified t) 9644 9672 (fontified t) 9672 9684 (face font-lock-function-name-face fontified t) 9684 9685 (fontified t) 9685 9689 (face font-lock-constant-face fontified t) 9689 9695 (fontified t) 9695 9700 (face font-lock-function-name-face fontified t) 9700 9710 (fontified t) 9710 9716 (face font-lock-keyword-face fontified t) 9716 9721 (fontified t) 9721 9726 (face font-lock-keyword-face fontified t) 9726 9732 (fontified t) 9732 9737 (face font-lock-function-name-face fontified t) 9737 9742 (fontified t) 9742 9759 (face font-lock-variable-name-face fontified t) 9759 9763 (fontified t) 9763 9765 (face font-lock-string-face fontified t) 9765 9767 (fontified t) 9767 9771 (face font-lock-variable-name-face fontified t) 9771 9775 (fontified t) 9775 9777 (face font-lock-string-face fontified t) 9777 9780 (fontified t) 9780 9782 (face font-lock-variable-name-face fontified t) 9782 9786 (fontified t) 9786 9801 (face font-lock-type-face fontified t) 9801 9805 (fontified t) 9805 9808 (face font-lock-keyword-face fontified t) 9808 9814 (fontified t) 9814 9818 (face font-lock-function-name-face fontified t) 9818 9825 (fontified t) 9825 9827 (face font-lock-keyword-face fontified t) 9827 9828 (fontified t) 9828 9831 (face font-lock-variable-name-face fontified t) 9831 9840 (fontified t) 9840 9844 (face font-lock-function-name-face fontified t) 9844 9880 (fontified t) 9880 9883 (face font-lock-constant-face fontified t) 9883 9891 (fontified t) 9891 9897 (face font-lock-function-name-face fontified t) 9897 9900 (fontified t) 9900 9906 (face font-lock-function-name-face fontified t) 9906 9909 (fontified t) 9909 9914 (face font-lock-function-name-face fontified t) 9914 9915 (fontified t) 9915 9951 (face font-lock-string-face fontified t) 9951 9953 (fontified t) 9953 9960 (face font-lock-string-face fontified t) 9960 9970 (fontified t) 9970 9978 (face font-lock-keyword-face fontified t) 9978 9988 (fontified t) 9988 9999 (face font-lock-function-name-face fontified t) 9999 10000 (fontified t) 10000 10003 (face font-lock-string-face fontified t) 10003 10005 (font-lock-multiline t face font-lock-string-face fontified t) 10005 10012 (font-lock-multiline t fontified t) 10012 10023 (font-lock-multiline t face font-lock-function-name-face fontified t) 10023 10048 (font-lock-multiline t fontified t) 10048 10057 (font-lock-multiline t face font-lock-function-name-face fontified t) 10057 10058 (font-lock-multiline t fontified t) 10058 10060 (font-lock-multiline t face font-lock-string-face fontified t) 10060 10061 (face font-lock-string-face fontified t) 10061 10065 (fontified t) 10065 10067 (face font-lock-keyword-face fontified t) 10067 10076 (fontified t) 10076 10078 (face font-lock-string-face fontified t) 10078 10087 (fontified t) 10087 10098 (face font-lock-function-name-face fontified t) 10098 10099 (fontified t) 10099 10109 (face font-lock-string-face fontified t) 10109 10114 (fontified t) 10114 10117 (fontified t) 10117 10128 (face font-lock-function-name-face fontified t) 10128 10135 (fontified t) 10135 10141 (fontified t) 10141 10150 (face font-lock-function-name-face fontified t) 10150 10151 (fontified t) 10151 10154 (face font-lock-string-face fontified t) 10154 10165 (fontified t) 10165 10174 (face font-lock-function-name-face fontified t) 10174 10175 (fontified t) 10175 10176 (face font-lock-string-face fontified t) 10176 10177 (face font-lock-string-face syntax-table (9) fontified t) 10177 10179 (face font-lock-string-face fontified t) 10179 10186 (fontified t) 10186 10188 (face font-lock-keyword-face fontified t) 10188 10192 (fontified t) 10192 10195 (face font-lock-function-name-face fontified t) 10195 10209 (fontified t) 10209 10222 (face font-lock-function-name-face fontified t) 10222 10231 (fontified t) 10231 10254 (face font-lock-function-name-face fontified t) 10254 10261 (fontified t) 10261 10270 (face font-lock-function-name-face fontified t) 10270 10271 (fontified t) 10271 10284 (face font-lock-type-face fontified t) 10284 10290 (fontified t) 10290 10295 (face font-lock-constant-face fontified t) 10295 10303 (fontified t) 10303 10331 (face font-lock-string-face fontified t) 10331 10337 (fontified t) 10337 10348 (face font-lock-constant-face fontified t) 10348 10350 (fontified t) 10350 10399 (face font-lock-string-face fontified t) 10399 10405 (fontified t) 10405 10410 (face font-lock-constant-face fontified t) 10410 10438 (fontified t) 10438 10450 (face font-lock-function-name-face fontified t) 10450 10451 (fontified t) 10451 10455 (face font-lock-constant-face fontified t) 10455 10461 (fontified t) 10461 10466 (face font-lock-function-name-face fontified t) 10466 10476 (fontified t) 10476 10482 (face font-lock-keyword-face fontified t) 10482 10490 (fontified t) 10490 10503 (face font-lock-function-name-face fontified t) 10503 10512 (fontified t) 10512 10535 (face font-lock-function-name-face fontified t) 10535 10541 (fontified t) 10541 10550 (face font-lock-function-name-face fontified t) 10550 10551 (fontified t) 10551 10564 (face font-lock-type-face fontified t) 10564 10569 (fontified t) 10569 10574 (face font-lock-constant-face fontified t) 10574 10582 (fontified t) 10582 10607 (face font-lock-string-face fontified t) 10607 10612 (fontified t) 10612 10623 (face font-lock-constant-face fontified t) 10623 10629 (fontified t) 10629 10636 (face font-lock-function-name-face fontified t) 10636 10637 (fontified t) 10637 10678 (face font-lock-string-face fontified t) 10678 10679 (face font-lock-string-face syntax-table (9) fontified t) 10679 10683 (face font-lock-string-face fontified t) 10683 10688 (fontified t) 10688 10694 (face font-lock-function-name-face fontified t) 10694 10702 (fontified t) 10702 10707 (face font-lock-constant-face fontified t) 10707 10733 (fontified t) 10733 10745 (face font-lock-function-name-face fontified t) 10745 10746 (fontified t) 10746 10750 (face font-lock-constant-face fontified t) 10750 10755 (fontified t) 10755 10760 (face font-lock-function-name-face fontified t) 10760 10770 (fontified t) 10770 10774 (face font-lock-keyword-face fontified t) 10774 10776 (fontified t) 10776 10777 (face font-lock-variable-name-face fontified t) 10777 10779 (fontified t) 10779 10786 (face font-lock-type-face fontified t) 10786 10788 (fontified t) 10788 10814 (face font-lock-function-name-face fontified t) 10814 10815 (fontified t) 10815 10816 (face font-lock-variable-name-face fontified t) 10816 10818 (fontified t) 10818 10860 (face font-lock-type-face fontified t) 10860 10865 (fontified t) 10865 10876 (face font-lock-variable-name-face fontified t) 10876 10882 (fontified t) 10882 10909 (face font-lock-function-name-face fontified t) 10909 10914 (fontified t) 10914 10920 (face font-lock-keyword-face fontified t) 10920 10933 (fontified t) 10933 10944 (face font-lock-function-name-face fontified t) 10944 10950 (fontified t) 10950 10954 (face font-lock-keyword-face fontified t) 10954 10955 (fontified t) 10955 10961 (face font-lock-string-face fontified t) 10961 10967 (fontified t) 10967 10997 (face font-lock-function-name-face fontified t) 10997 11015 (fontified t) 11015 11019 (face font-lock-keyword-face fontified t) 11019 11020 (fontified t) 11020 11028 (face font-lock-string-face fontified t) 11028 11034 (fontified t) 11034 11066 (face font-lock-function-name-face fontified t) 11066 11084 (fontified t) 11084 11088 (face font-lock-keyword-face fontified t) 11088 11089 (fontified t) 11089 11101 (face font-lock-string-face fontified t) 11101 11107 (fontified t) 11107 11142 (face font-lock-function-name-face fontified t) 11142 11160 (fontified t) 11160 11164 (face font-lock-keyword-face fontified t) 11164 11165 (fontified t) 11165 11171 (face font-lock-string-face fontified t) 11171 11177 (fontified t) 11177 11207 (face font-lock-function-name-face fontified t) 11207 11230 (fontified t) 11230 11234 (face font-lock-keyword-face fontified t) 11234 11236 (fontified t) 11236 11237 (face font-lock-variable-name-face fontified t) 11237 11239 (fontified t) 11239 11246 (face font-lock-type-face fontified t) 11246 11248 (fontified t) 11248 11263 (face font-lock-function-name-face fontified t) 11263 11264 (fontified t) 11264 11265 (face font-lock-variable-name-face fontified t) 11265 11267 (fontified t) 11267 11292 (face font-lock-type-face fontified t) 11292 11297 (fontified t) 11297 11299 (face font-lock-keyword-face fontified t) 11299 11325 (fontified t) 11325 11331 (face font-lock-keyword-face fontified t) 11331 11337 (fontified t) 11337 11351 (face font-lock-variable-name-face fontified t) 11351 11353 (fontified t) 11353 11356 (face font-lock-variable-name-face fontified t) 11356 11360 (fontified t) 11360 11379 (face font-lock-function-name-face fontified t) 11379 11407 (fontified t) 11407 11409 (face font-lock-keyword-face fontified t) 11409 11417 (fontified t) 11417 11420 (face font-lock-constant-face fontified t) 11420 11427 (fontified t) 11427 11433 (face font-lock-function-name-face fontified t) 11433 11436 (fontified t) 11436 11442 (face font-lock-function-name-face fontified t) 11442 11445 (fontified t) 11445 11450 (face font-lock-function-name-face fontified t) 11450 11451 (fontified t) 11451 11484 (face font-lock-string-face fontified t) 11484 11486 (fontified t) 11486 11493 (face font-lock-string-face fontified t) 11493 11502 (fontified t) 11502 11508 (face font-lock-keyword-face fontified t) 11508 11514 (fontified t) 11514 11516 (face font-lock-variable-name-face fontified t) 11516 11518 (fontified t) 11518 11521 (face font-lock-variable-name-face fontified t) 11521 11530 (fontified t) 11530 11537 (face font-lock-function-name-face fontified t) 11537 11545 (fontified t) 11545 11548 (face font-lock-constant-face fontified t) 11548 11551 (fontified t) 11551 11553 (face font-lock-keyword-face fontified t) 11553 11561 (fontified t) 11561 11564 (face font-lock-constant-face fontified t) 11564 11571 (fontified t) 11571 11577 (face font-lock-function-name-face fontified t) 11577 11580 (fontified t) 11580 11586 (face font-lock-function-name-face fontified t) 11586 11589 (fontified t) 11589 11594 (face font-lock-function-name-face fontified t) 11594 11595 (fontified t) 11595 11624 (face font-lock-string-face fontified t) 11624 11626 (fontified t) 11626 11633 (face font-lock-string-face fontified t) 11633 11635 (fontified t) 11635 11640 (fontified t) 11640 11642 (fontified t) 11642 11648 (face font-lock-keyword-face fontified t) 11648 11653 (fontified t) 11653 11658 (face font-lock-keyword-face fontified t) 11658 11662 (fontified t) 11662 11670 (face font-lock-function-name-face fontified t) 11670 11675 (fontified t) 11675 11677 (face font-lock-keyword-face fontified t) 11677 11678 (fontified t) 11678 11681 (face font-lock-variable-name-face fontified t) 11681 11685 (fontified t) 11685 11702 (face font-lock-function-name-face fontified t) 11702 11770 (fontified t) 11770 11773 (face font-lock-constant-face fontified t) 11773 11780 (fontified t) 11780 11786 (face font-lock-function-name-face fontified t) 11786 11789 (fontified t) 11789 11795 (face font-lock-function-name-face fontified t) 11795 11798 (fontified t) 11798 11803 (face font-lock-function-name-face fontified t) 11803 11804 (fontified t) 11804 11835 (face font-lock-string-face fontified t) 11835 11837 (fontified t) 11837 11844 (face font-lock-string-face fontified t) 11844 11856 (fontified t) 11856 11875 (face font-lock-variable-name-face fontified t) 11875 11877 (fontified t) 11877 11900 (face font-lock-variable-name-face fontified t) 11900 11902 (fontified t) 11902 11925 (face font-lock-variable-name-face fontified t) 11925 11931 (fontified t) 11931 11956 (face font-lock-function-name-face fontified t) 11956 11980 (fontified t) 11980 11985 (face font-lock-constant-face fontified t) 11985 11989 (fontified t) 11989 11992 (face font-lock-keyword-face fontified t) 11992 11993 (fontified t) 11993 11994 (face font-lock-variable-name-face fontified t) 11994 11996 (fontified t) 11996 12011 (face font-lock-variable-name-face fontified t) 12011 12015 (fontified t) 12015 12020 (face font-lock-keyword-face fontified t) 12020 12040 (fontified t) 12040 12056 (face font-lock-variable-name-face fontified t) 12056 12058 (fontified t) 12058 12061 (face font-lock-variable-name-face fontified t) 12061 12067 (fontified t) 12067 12086 (face font-lock-function-name-face fontified t) 12086 12089 (fontified t) 12089 12095 (face font-lock-function-name-face fontified t) 12095 12118 (fontified t) 12118 12120 (face font-lock-keyword-face fontified t) 12120 12128 (fontified t) 12128 12131 (face font-lock-constant-face fontified t) 12131 12139 (fontified t) 12139 12145 (face font-lock-function-name-face fontified t) 12145 12148 (fontified t) 12148 12154 (face font-lock-function-name-face fontified t) 12154 12157 (fontified t) 12157 12162 (face font-lock-function-name-face fontified t) 12162 12163 (fontified t) 12163 12193 (face font-lock-string-face fontified t) 12193 12195 (fontified t) 12195 12202 (face font-lock-string-face fontified t) 12202 12212 (fontified t) 12212 12220 (face font-lock-keyword-face fontified t) 12220 12228 (fontified t) 12228 12235 (face font-lock-variable-name-face fontified t) 12235 12240 (fontified t) 12240 12255 (face font-lock-type-face fontified t) 12255 12260 (fontified t) 12260 12262 (face font-lock-keyword-face fontified t) 12262 12263 (fontified t) 12263 12266 (face font-lock-variable-name-face fontified t) 12266 12272 (fontified t) 12272 12295 (face font-lock-function-name-face fontified t) 12295 12384 (fontified t) 12384 12387 (face font-lock-constant-face fontified t) 12387 12395 (fontified t) 12395 12401 (face font-lock-function-name-face fontified t) 12401 12404 (fontified t) 12404 12410 (face font-lock-function-name-face fontified t) 12410 12413 (fontified t) 12413 12418 (face font-lock-function-name-face fontified t) 12418 12419 (fontified t) 12419 12452 (face font-lock-string-face fontified t) 12452 12454 (fontified t) 12454 12461 (face font-lock-string-face fontified t) 12461 12482 (fontified t) 12482 12493 (face font-lock-function-name-face fontified t) 12493 12523 (fontified t) 12523 12534 (face font-lock-function-name-face fontified t) 12534 12559 (fontified t) 12559 12561 (face font-lock-keyword-face fontified t) 12561 12570 (fontified t) 12570 12573 (face font-lock-function-name-face fontified t) 12573 12584 (fontified t) 12584 12587 (face font-lock-builtin-face fontified t) 12587 12625 (fontified t) 12625 12631 (face font-lock-function-name-face fontified t) 12631 12634 (fontified t) 12634 12640 (face font-lock-function-name-face fontified t) 12640 12643 (fontified t) 12643 12648 (face font-lock-function-name-face fontified t) 12648 12649 (fontified t) 12649 12670 (face font-lock-string-face fontified t) 12670 12675 (fontified t) 12675 12683 (face font-lock-keyword-face fontified t) 12683 12691 (fontified t) 12691 12705 (face font-lock-variable-name-face fontified t) 12705 12717 (fontified t) 12717 12747 (face font-lock-function-name-face fontified t) 12747 12754 (fontified t) 12754 12772 (face font-lock-function-name-face fontified t) 12772 12774 (fontified t) 12774 12797 (face font-lock-type-face fontified t) 12797 12805 (fontified t) 12805 12816 (face font-lock-function-name-face fontified t) 12816 12848 (fontified t) 12848 12858 (face font-lock-function-name-face fontified t) 12858 12867 (fontified t) 12867 12873 (face font-lock-function-name-face fontified t) 12873 12880 (fontified t) 12880 12882 (face font-lock-keyword-face fontified t) 12882 12883 (fontified t) 12883 12886 (face font-lock-variable-name-face fontified t) 12886 12907 (fontified t) 12907 12916 (face font-lock-function-name-face fontified t) 12916 12927 (fontified t) 12927 12930 (face font-lock-constant-face fontified t) 12930 12951 (fontified t) 12951 12963 (face font-lock-function-name-face fontified t) 12963 12974 (fontified t) 12974 12978 (face font-lock-keyword-face fontified t) 12978 12999 (fontified t) 12999 13011 (face font-lock-function-name-face fontified t) 13011 13016 (fontified t) 13016 13023 (face font-lock-function-name-face fontified t) 13023 13024 (fontified t) 13024 13049 (face font-lock-string-face fontified t) 13049 13093 (fontified t) 13093 13096 (face font-lock-keyword-face fontified t) 13096 13097 (fontified t) 13097 13098 (face font-lock-variable-name-face fontified t) 13098 13100 (fontified t) 13100 13116 (face font-lock-variable-name-face fontified t) 13116 13120 (fontified t) 13120 13125 (face font-lock-keyword-face fontified t) 13125 13140 (fontified t) 13140 13152 (fontified t) 13152 13155 (fontified t) 13155 13161 (face font-lock-variable-name-face fontified t) 13161 13223 (fontified t) 13223 13230 (face font-lock-function-name-face fontified t) 13230 13248 (fontified t) 13248 13266 (face font-lock-function-name-face fontified t) 13266 13294 (fontified t) 13294 13303 (face font-lock-function-name-face fontified t) 13303 13340 (fontified t) 13340 13355 (face font-lock-variable-name-face fontified t) 13355 13367 (fontified t) 13367 13370 (face font-lock-function-name-face fontified t) 13370 13388 (fontified t) 13388 13390 (face font-lock-function-name-face fontified t) 13390 13420 (fontified t) 13420 13434 (face font-lock-variable-name-face fontified t) 13434 13436 (fontified t) 13436 13439 (face font-lock-variable-name-face fontified t) 13439 13459 (fontified t) 13459 13472 (face font-lock-function-name-face fontified t) 13472 13488 (fontified t) 13488 13493 (face font-lock-function-name-face fontified t) 13493 13499 (fontified t) 13499 13501 (face font-lock-keyword-face fontified t) 13501 13509 (fontified t) 13509 13512 (face font-lock-constant-face fontified t) 13512 13520 (fontified t) 13520 13526 (face font-lock-function-name-face fontified t) 13526 13529 (fontified t) 13529 13535 (face font-lock-function-name-face fontified t) 13535 13538 (fontified t) 13538 13543 (face font-lock-function-name-face fontified t) 13543 13544 (fontified t) 13544 13580 (face font-lock-string-face fontified t) 13580 13582 (fontified t) 13582 13589 (face font-lock-string-face fontified t) 13589 13618 (fontified t) 13618 13623 (face font-lock-function-name-face fontified t) 13623 13634 (fontified t) 13634 13636 (face font-lock-keyword-face fontified t) 13636 13637 (fontified t) 13637 13640 (face font-lock-variable-name-face fontified t) 13640 13644 (fontified t) 13644 13662 (face font-lock-function-name-face fontified t) 13662 13761 (fontified t) 13761 13764 (face font-lock-constant-face fontified t) 13764 13772 (fontified t) 13772 13778 (face font-lock-function-name-face fontified t) 13778 13781 (fontified t) 13781 13787 (face font-lock-function-name-face fontified t) 13787 13790 (fontified t) 13790 13795 (face font-lock-function-name-face fontified t) 13795 13796 (fontified t) 13796 13828 (face font-lock-string-face fontified t) 13828 13830 (fontified t) 13830 13837 (face font-lock-string-face fontified t) 13837 13853 (fontified t) 13853 13855 (face font-lock-keyword-face fontified t) 13855 13856 (fontified t) 13856 13859 (face font-lock-variable-name-face fontified t) 13859 13866 (fontified t) 13866 13872 (face font-lock-function-name-face fontified t) 13872 13883 (fontified t) 13883 13886 (face font-lock-constant-face fontified t) 13886 13893 (fontified t) 13893 13899 (face font-lock-function-name-face fontified t) 13899 13902 (fontified t) 13902 13908 (face font-lock-function-name-face fontified t) 13908 13911 (fontified t) 13911 13916 (face font-lock-function-name-face fontified t) 13916 13917 (fontified t) 13917 13947 (face font-lock-string-face fontified t) 13947 13949 (fontified t) 13949 13956 (face font-lock-string-face fontified t) 13956 13965 (fontified t) 13965 13971 (face font-lock-keyword-face fontified t) 13971 13978 (fontified t) 13978 13982 (face font-lock-keyword-face fontified t) 13982 13984 (fontified t) 13984 13985 (face font-lock-variable-name-face fontified t) 13985 13987 (fontified t) 13987 13994 (face font-lock-type-face fontified t) 13994 13996 (fontified t) 13996 14011 (face font-lock-function-name-face fontified t) 14011 14012 (fontified t) 14012 14013 (face font-lock-variable-name-face fontified t) 14013 14015 (fontified t) 14015 14040 (face font-lock-type-face fontified t) 14040 14045 (fontified t) 14045 14047 (face font-lock-keyword-face fontified t) 14047 14073 (fontified t) 14073 14079 (face font-lock-keyword-face fontified t) 14079 14085 (fontified t) 14085 14099 (face font-lock-variable-name-face fontified t) 14099 14101 (fontified t) 14101 14104 (face font-lock-variable-name-face fontified t) 14104 14108 (fontified t) 14108 14127 (face font-lock-function-name-face fontified t) 14127 14155 (fontified t) 14155 14157 (face font-lock-keyword-face fontified t) 14157 14165 (fontified t) 14165 14168 (face font-lock-constant-face fontified t) 14168 14175 (fontified t) 14175 14181 (face font-lock-function-name-face fontified t) 14181 14184 (fontified t) 14184 14190 (face font-lock-function-name-face fontified t) 14190 14193 (fontified t) 14193 14198 (face font-lock-function-name-face fontified t) 14198 14199 (fontified t) 14199 14232 (face font-lock-string-face fontified t) 14232 14234 (fontified t) 14234 14241 (face font-lock-string-face fontified t) 14241 14250 (fontified t) 14250 14256 (face font-lock-keyword-face fontified t) 14256 14262 (fontified t) 14262 14281 (face font-lock-variable-name-face fontified t) 14281 14283 (fontified t) 14283 14284 (face font-lock-variable-name-face fontified t) 14284 14286 (fontified t) 14286 14287 (face font-lock-variable-name-face fontified t) 14287 14293 (fontified t) 14293 14318 (face font-lock-function-name-face fontified t) 14318 14342 (fontified t) 14342 14346 (face font-lock-constant-face fontified t) 14346 14350 (fontified t) 14350 14353 (face font-lock-keyword-face fontified t) 14353 14354 (fontified t) 14354 14355 (face font-lock-variable-name-face fontified t) 14355 14357 (fontified t) 14357 14372 (face font-lock-variable-name-face fontified t) 14372 14376 (fontified t) 14376 14381 (face font-lock-keyword-face fontified t) 14381 14401 (fontified t) 14401 14417 (face font-lock-variable-name-face fontified t) 14417 14419 (fontified t) 14419 14422 (face font-lock-variable-name-face fontified t) 14422 14426 (fontified t) 14426 14446 (face font-lock-function-name-face fontified t) 14446 14492 (fontified t) 14492 14494 (face font-lock-keyword-face fontified t) 14494 14502 (fontified t) 14502 14505 (face font-lock-constant-face fontified t) 14505 14513 (fontified t) 14513 14519 (face font-lock-function-name-face fontified t) 14519 14522 (fontified t) 14522 14528 (face font-lock-function-name-face fontified t) 14528 14531 (fontified t) 14531 14536 (face font-lock-function-name-face fontified t) 14536 14537 (fontified t) 14537 14584 (face font-lock-string-face fontified t) 14584 14586 (fontified t) 14586 14593 (face font-lock-string-face fontified t) 14593 14603 (fontified t) 14603 14611 (face font-lock-keyword-face fontified t) 14611 14619 (fontified t) 14619 14635 (face font-lock-variable-name-face fontified t) 14635 14637 (fontified t) 14637 14640 (face font-lock-variable-name-face fontified t) 14640 14646 (fontified t) 14646 14652 (face font-lock-function-name-face fontified t) 14652 14665 (face font-lock-function-name-face fontified t) 14665 14668 (fontified t) 14668 14674 (face font-lock-function-name-face fontified t) 14674 14695 (fontified t) 14695 14697 (fontified t) 14697 14699 (face font-lock-keyword-face fontified t) 14699 14707 (fontified t) 14707 14710 (face font-lock-constant-face fontified t) 14710 14718 (fontified t) 14718 14724 (face font-lock-function-name-face fontified t) 14724 14727 (fontified t) 14727 14733 (face font-lock-function-name-face fontified t) 14733 14736 (fontified t) 14736 14741 (face font-lock-function-name-face fontified t) 14741 14742 (fontified t) 14742 14776 (face font-lock-string-face fontified t) 14776 14778 (fontified t) 14778 14785 (face font-lock-string-face fontified t) 14785 14795 (fontified t) 14795 14803 (face font-lock-keyword-face fontified t) 14803 14811 (fontified t) 14811 14818 (face font-lock-variable-name-face fontified t) 14818 14823 (fontified t) 14823 14838 (face font-lock-type-face fontified t) 14838 14843 (fontified t) 14843 14845 (face font-lock-keyword-face fontified t) 14845 14846 (fontified t) 14846 14849 (face font-lock-variable-name-face fontified t) 14849 14855 (fontified t) 14855 14878 (face font-lock-function-name-face fontified t) 14878 14967 (fontified t) 14967 14970 (face font-lock-constant-face fontified t) 14970 14978 (fontified t) 14978 14984 (face font-lock-function-name-face fontified t) 14984 14987 (fontified t) 14987 14993 (face font-lock-function-name-face fontified t) 14993 14996 (fontified t) 14996 15001 (face font-lock-function-name-face fontified t) 15001 15002 (fontified t) 15002 15035 (face font-lock-string-face fontified t) 15035 15037 (fontified t) 15037 15044 (face font-lock-string-face fontified t) 15044 15065 (fontified t) 15065 15076 (face font-lock-function-name-face fontified t) 15076 15106 (fontified t) 15106 15117 (face font-lock-function-name-face fontified t) 15117 15142 (fontified t) 15142 15156 (face font-lock-variable-name-face fontified t) 15156 15168 (fontified t) 15168 15198 (face font-lock-function-name-face fontified t) 15198 15205 (fontified t) 15205 15215 (face font-lock-function-name-face fontified t) 15215 15224 (fontified t) 15224 15230 (face font-lock-function-name-face fontified t) 15230 15237 (fontified t) 15237 15252 (face font-lock-variable-name-face fontified t) 15252 15264 (fontified t) 15264 15267 (face font-lock-function-name-face fontified t) 15267 15285 (fontified t) 15285 15287 (face font-lock-function-name-face fontified t) 15287 15318 (fontified t) 15318 15320 (face font-lock-keyword-face fontified t) 15320 15321 (fontified t) 15321 15322 (face font-lock-variable-name-face fontified t) 15322 15324 (fontified t) 15324 15327 (face font-lock-variable-name-face fontified t) 15327 15347 (fontified t) 15347 15360 (face font-lock-function-name-face fontified t) 15360 15394 (fontified t) 15394 15399 (face font-lock-function-name-face fontified t) 15399 15411 (fontified t) 15411 15414 (face font-lock-constant-face fontified t) 15414 15422 (fontified t) 15422 15428 (face font-lock-function-name-face fontified t) 15428 15431 (fontified t) 15431 15437 (face font-lock-function-name-face fontified t) 15437 15440 (fontified t) 15440 15445 (face font-lock-function-name-face fontified t) 15445 15446 (fontified t) 15446 15494 (face font-lock-string-face fontified t) 15494 15496 (fontified t) 15496 15503 (face font-lock-string-face fontified t) 15503 15533 (fontified t) 15533 15538 (face font-lock-function-name-face fontified t) 15538 15552 (fontified t) 15552 15556 (face font-lock-keyword-face fontified t) 15556 15558 (fontified t) 15558 15559 (face font-lock-variable-name-face fontified t) 15559 15561 (fontified t) 15561 15568 (face font-lock-type-face fontified t) 15568 15570 (fontified t) 15570 15585 (face font-lock-function-name-face fontified t) 15585 15586 (fontified t) 15586 15587 (face font-lock-variable-name-face fontified t) 15587 15589 (fontified t) 15589 15614 (face font-lock-type-face fontified t) 15614 15619 (fontified t) 15619 15621 (face font-lock-keyword-face fontified t) 15621 15647 (fontified t) 15647 15653 (face font-lock-keyword-face fontified t) 15653 15659 (fontified t) 15659 15661 (face font-lock-keyword-face fontified t) 15661 15662 (fontified t) 15662 15663 (face font-lock-variable-name-face fontified t) 15663 15665 (fontified t) 15665 15667 (face font-lock-variable-name-face fontified t) 15667 15688 (fontified t) 15688 15701 (face font-lock-function-name-face fontified t) 15701 15723 (fontified t) 15723 15729 (face font-lock-keyword-face fontified t) 15729 15735 (fontified t) 15735 15749 (face font-lock-variable-name-face fontified t) 15749 15751 (fontified t) 15751 15754 (face font-lock-variable-name-face fontified t) 15754 15758 (fontified t) 15758 15777 (face font-lock-function-name-face fontified t) 15777 15805 (fontified t) 15805 15807 (face font-lock-keyword-face fontified t) 15807 15815 (fontified t) 15815 15818 (face font-lock-constant-face fontified t) 15818 15825 (fontified t) 15825 15831 (face font-lock-function-name-face fontified t) 15831 15834 (fontified t) 15834 15840 (face font-lock-function-name-face fontified t) 15840 15843 (fontified t) 15843 15848 (face font-lock-function-name-face fontified t) 15848 15849 (fontified t) 15849 15882 (face font-lock-string-face fontified t) 15882 15884 (fontified t) 15884 15891 (face font-lock-string-face fontified t) 15891 15900 (fontified t) 15900 15906 (face font-lock-keyword-face fontified t) 15906 15912 (fontified t) 15912 15915 (face font-lock-keyword-face fontified t) 15915 15916 (fontified t) 15916 15917 (face font-lock-variable-name-face fontified t) 15917 15919 (fontified t) 15919 15934 (face font-lock-variable-name-face fontified t) 15934 15938 (fontified t) 15938 15943 (face font-lock-keyword-face fontified t) 15943 15963 (fontified t) 15963 15979 (face font-lock-variable-name-face fontified t) 15979 15981 (fontified t) 15981 15984 (face font-lock-variable-name-face fontified t) 15984 15988 (fontified t) 15988 16008 (face font-lock-function-name-face fontified t) 16008 16054 (fontified t) 16054 16056 (face font-lock-keyword-face fontified t) 16056 16064 (fontified t) 16064 16067 (face font-lock-constant-face fontified t) 16067 16075 (fontified t) 16075 16081 (face font-lock-function-name-face fontified t) 16081 16084 (fontified t) 16084 16090 (face font-lock-function-name-face fontified t) 16090 16093 (fontified t) 16093 16098 (face font-lock-function-name-face fontified t) 16098 16099 (fontified t) 16099 16148 (face font-lock-string-face fontified t) 16148 16150 (fontified t) 16150 16157 (face font-lock-string-face fontified t) 16157 16167 (fontified t) 16167 16175 (face font-lock-keyword-face fontified t) 16175 16183 (fontified t) 16183 16195 (face font-lock-variable-name-face fontified t) 16195 16199 (face font-lock-variable-name-face fontified t) 16199 16201 (fontified t) 16201 16204 (face font-lock-variable-name-face fontified t) 16204 16210 (fontified t) 16210 16229 (face font-lock-function-name-face fontified t) 16229 16232 (fontified t) 16232 16238 (face font-lock-function-name-face fontified t) 16238 16259 (fontified t) 16259 16261 (fontified t) 16261 16263 (face font-lock-keyword-face fontified t) 16263 16271 (fontified t) 16271 16274 (face font-lock-constant-face fontified t) 16274 16282 (fontified t) 16282 16288 (face font-lock-function-name-face fontified t) 16288 16291 (fontified t) 16291 16297 (face font-lock-function-name-face fontified t) 16297 16300 (fontified t) 16300 16305 (face font-lock-function-name-face fontified t) 16305 16306 (fontified t) 16306 16340 (face font-lock-string-face fontified t) 16340 16342 (fontified t) 16342 16349 (face font-lock-string-face fontified t) 16349 16359 (fontified t) 16359 16367 (face font-lock-keyword-face fontified t) 16367 16375 (fontified t) 16375 16390 (face font-lock-variable-name-face fontified t) 16390 16402 (fontified t) 16402 16405 (face font-lock-function-name-face fontified t) 16405 16423 (fontified t) 16423 16425 (face font-lock-function-name-face fontified t) 16425 16456 (fontified t) 16456 16458 (face font-lock-keyword-face fontified t) 16458 16459 (fontified t) 16459 16462 (face font-lock-variable-name-face fontified t) 16462 16482 (fontified t) 16482 16495 (face font-lock-function-name-face fontified t) 16495 16522 (fontified t) 16522 16525 (face font-lock-constant-face fontified t) 16525 16533 (fontified t) 16533 16539 (face font-lock-function-name-face fontified t) 16539 16542 (fontified t) 16542 16548 (face font-lock-function-name-face fontified t) 16548 16551 (fontified t) 16551 16556 (face font-lock-function-name-face fontified t) 16556 16557 (fontified t) 16557 16605 (face font-lock-string-face fontified t) 16605 16607 (fontified t) 16607 16614 (face font-lock-string-face fontified t) 16614 16625 (fontified t) 16625 16629 (face font-lock-keyword-face fontified t) 16629 16652 (fontified t) 16652 16657 (face font-lock-function-name-face fontified t) 16657 16676 (fontified t) 16676 16679 (face font-lock-constant-face fontified t) 16679 16704 (fontified t) 16704 16709 (face font-lock-function-name-face fontified t) 16709 16721 (fontified t)) . 533) (undo-tree-id184 . -7) (undo-tree-id185 . -50) (undo-tree-id186 . -117) (undo-tree-id187 . -139) (undo-tree-id188 . -165) (undo-tree-id189 . -189) (undo-tree-id190 . -234) (undo-tree-id191 . -865) (undo-tree-id192 . -2290) (undo-tree-id193 . -2828) (undo-tree-id194 . -4340) (undo-tree-id195 . -5380) (undo-tree-id196 . -6584) (undo-tree-id197 . -7907) (undo-tree-id198 . -9120) (undo-tree-id199 . -10788) (undo-tree-id200 . -11248) (undo-tree-id201 . -13996) (undo-tree-id202 . -15570) (undo-tree-id203 . -16721) (undo-tree-id204 . -16721) (undo-tree-id205 . -2389) (undo-tree-id206 . -2272) (undo-tree-id207 . -2271) (undo-tree-id208 . -2269) (undo-tree-id209 . -2257) (undo-tree-id210 . -2204) (undo-tree-id211 . -2203) (undo-tree-id212 . -2200) (undo-tree-id213 . -2195) (undo-tree-id214 . -2128) (undo-tree-id215 . -2104) (undo-tree-id216 . -2074) (undo-tree-id217 . -2069) (undo-tree-id218 . -2000) (undo-tree-id219 . -1970) (undo-tree-id220 . -1940) (undo-tree-id221 . -1935) (undo-tree-id222 . -1929) (undo-tree-id223 . -1922) (undo-tree-id224 . -1898) (undo-tree-id225 . -1842) (undo-tree-id226 . -1801) (undo-tree-id227 . -1757) (undo-tree-id228 . -1709) (undo-tree-id229 . -1645) (undo-tree-id230 . -1619) (undo-tree-id231 . -1589) (undo-tree-id232 . -1584) (undo-tree-id233 . -1500) (undo-tree-id234 . -1416) (undo-tree-id235 . -1410) (undo-tree-id236 . -1403) (undo-tree-id237 . -1355) (undo-tree-id238 . -1329) (undo-tree-id239 . -1285) (undo-tree-id240 . -1278) (undo-tree-id241 . -1254) (undo-tree-id242 . -1202) (undo-tree-id243 . -1161) (undo-tree-id244 . -1117) (undo-tree-id245 . -1069) (undo-tree-id246 . -1009) (undo-tree-id247 . -985) (undo-tree-id248 . -955) (undo-tree-id249 . -906) (undo-tree-id250 . -847) (undo-tree-id251 . -846) (undo-tree-id252 . -844) (undo-tree-id253 . -824) (undo-tree-id254 . -821) (undo-tree-id255 . -766) (undo-tree-id256 . -713) (undo-tree-id257 . -712) (undo-tree-id258 . -709) (undo-tree-id259 . -654) (undo-tree-id260 . -599) (undo-tree-id261 . -598) (undo-tree-id262 . -595) (undo-tree-id263 . -540) (undo-tree-id264 . -484) (undo-tree-id265 . -483) (undo-tree-id266 . -462) (undo-tree-id267 . -459) (undo-tree-id268 . -446) (undo-tree-id269 . -429) (undo-tree-id270 . -392) (undo-tree-id271 . -391) (undo-tree-id272 . -388) (undo-tree-id273 . -332) (undo-tree-id274 . -315) (undo-tree-id275 . -272) (undo-tree-id276 . -216) (undo-tree-id277 . -215) (undo-tree-id278 . -213) (undo-tree-id279 . -188) (undo-tree-id280 . -164) (undo-tree-id281 . -138) (undo-tree-id282 . -137) (undo-tree-id283 . -116) (undo-tree-id284 . -94) (undo-tree-id285 . -93) (undo-tree-id286 . -44) (undo-tree-id287 . -43) (undo-tree-id288 . -1) (undo-tree-id289 . -4) (undo-tree-id290 . -2) (undo-tree-id291 . -1) (undo-tree-id292 . -16721) (t 26443 31967 425212 11000)) nil (26444 40971 915304 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -532) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 533) nil (26444 40971 915275 0) 0 nil])
([nil nil ((#("	\"bytes\"" 0 1 (fontified t) 1 8 (face font-lock-string-face fontified t)) . 24) (undo-tree-id55 . -8) (undo-tree-id56 . -8) (undo-tree-id57 . -8) (undo-tree-id58 . -8) (undo-tree-id59 . -8) (undo-tree-id60 . -8) (undo-tree-id61 . -8) (undo-tree-id62 . -8)) nil (26444 40971 915241 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24) (undo-tree-id53 . -1) (undo-tree-id54 . -1)) nil (26444 40971 915239 0) 0 nil])
([nil nil ((#("	\"crypto/sha256\"" 0 1 (fontified t) 1 16 (face font-lock-string-face fontified t)) . 35) (undo-tree-id51 . -9) (undo-tree-id52 . -16)) nil (26444 40971 915238 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (26444 40971 915238 0) 0 nil])
([nil nil ((#("	\"database/sql\"" 0 1 (fontified t) 1 15 (face font-lock-string-face fontified t)) . 35) (undo-tree-id47 . -10) (undo-tree-id48 . -15)) nil (26444 40971 915237 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) nil (26444 40971 915237 0) 0 nil])
([nil nil ((#("	\"encoding/hex\"" 0 1 (fontified t) 1 15 (face font-lock-string-face fontified t)) . 35) (undo-tree-id44 . -15)) nil (26444 40971 915236 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) nil (26444 40971 915236 0) 0 nil])
([nil nil ((#("	\"fmt\"" 0 1 (fontified t) 1 6 (face font-lock-string-face fontified t)) . 35) (undo-tree-id40 . -6) (undo-tree-id41 . -6)) nil (26444 40971 915235 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id38 . -1) (undo-tree-id39 . -1)) nil (26444 40971 915234 0) 0 nil])
([nil nil ((#("	\"io\"" 0 1 (fontified t) 1 5 (face font-lock-string-face fontified t)) . 35) (undo-tree-id37 . -5)) nil (26444 40971 915234 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35) (undo-tree-id35 . -1) (undo-tree-id36 . -1)) nil (26444 40971 915233 0) 0 nil])
([nil nil ((#("	\"net/http\"" 0 1 (fontified t) 1 11 (face font-lock-string-face fontified t)) . 47) (undo-tree-id34 . -11)) nil (26444 40971 915232 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 47) (undo-tree-id32 . -1) (undo-tree-id33 . -1)) nil (26444 40971 915232 0) 0 nil])
([nil nil ((#("	\"strings\"" 0 1 (fontified t) 1 10 (face font-lock-string-face fontified t)) . 66) (undo-tree-id31 . -10)) nil (26444 40971 915232 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 66) (undo-tree-id29 . -1) (undo-tree-id30 . -1)) nil (26444 40971 915231 0) 0 nil])
([nil nil ((#("	\"sync\"" 0 1 (fontified t) 1 7 (face font-lock-string-face fontified t)) . 66) (undo-tree-id27 . -7) (undo-tree-id28 . -7)) nil (26444 40971 915230 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 66) (undo-tree-id25 . -1) (undo-tree-id26 . -1)) nil (26444 40971 915230 0) 0 nil])
([nil nil ((#("	\"unicode\"" 0 1 (fontified t) 1 10 (face font-lock-string-face fontified t)) . 77) (undo-tree-id23 . -10) (undo-tree-id24 . -10)) nil (26444 40971 915229 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 77) (undo-tree-id21 . -1) (undo-tree-id22 . -1)) nil (26444 40971 915229 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/disgo/discord\"" 0 1 (fontified t) 1 36 (face font-lock-string-face fontified t)) . 140) (undo-tree-id20 . -36)) nil (26444 40971 915228 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 140) (undo-tree-id18 . -1) (undo-tree-id19 . -1)) nil (26444 40971 915227 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/disgo/events\"" 0 1 (fontified t) 1 35 (face font-lock-string-face fontified t)) . 140) (undo-tree-id16 . -9) (undo-tree-id17 . -35)) nil (26444 40971 915227 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 140) (undo-tree-id14 . -1) (undo-tree-id15 . -1)) nil (26444 40971 915226 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/disgo/rest\"" 0 1 (fontified t) 1 33 (face font-lock-string-face fontified t)) . 177) (undo-tree-id13 . -33)) nil (26444 40971 915225 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 177) (undo-tree-id11 . -1) (undo-tree-id12 . -1)) nil (26444 40971 915225 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/disgo/webhook\"" 0 1 (fontified t) 1 36 (face font-lock-string-face fontified t)) . 177) (undo-tree-id9 . -7) (undo-tree-id10 . -36)) nil (26444 40971 915224 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 177) (undo-tree-id7 . -1) (undo-tree-id8 . -1)) nil (26444 40971 915224 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/json\"" 0 1 (fontified t) 1 27 (face font-lock-string-face fontified t)) . 177) (undo-tree-id5 . -6) (undo-tree-id6 . -27)) nil (26444 40971 915223 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 177) (undo-tree-id3 . -1) (undo-tree-id4 . -1)) nil (26444 40971 915223 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/snowflake/v2\"" 0 1 (fontified t) 1 35 (face font-lock-string-face fontified t)) . 177) (undo-tree-id2 . -35)) nil (26444 40971 915222 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 177) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) nil (26444 40971 915220 0) 0 nil])
([nil nil ((267 . 275) (t 26444 40971 919393 177000)) nil (26444 40979 529051 0) 0 nil])
([nil nil ((175 . 235) (268 . 268) (268 . 275) (#("handler" 0 7 (fontified nil)) . 268) (268 . 275) (#("handler" 0 7 (fontified t)) . -268) (undo-tree-id300 . -1) (undo-tree-id301 . -7) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -4) (undo-tree-id313 . -4) (undo-tree-id314 . -4) (undo-tree-id315 . -4) (undo-tree-id316 . -5) (undo-tree-id317 . -5) (undo-tree-id318 . -5) (undo-tree-id319 . -5) (undo-tree-id320 . -6) (undo-tree-id321 . -6) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -7) (undo-tree-id325 . -7) (undo-tree-id326 . -7) (undo-tree-id327 . -7) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . -7) (undo-tree-id331 . -7) (undo-tree-id332 . -7) (undo-tree-id333 . -7) 275) nil (26444 40979 529050 0) 0 nil])
([nil nil ((335 . 336)) nil (26444 40979 529042 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -336) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) 337) nil (26444 40979 529040 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -344) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 345 (t 26444 40979 533391 632000)) nil (26444 41012 467046 0) 0 nil])
([nil nil ((344 . 345)) nil (26444 41012 467037 0) 0 nil])
([nil nil ((395 . 397) (t 26444 41012 471560 363000)) nil (26444 41026 224987 0) 0 nil])
([nil nil ((397 . 404)) nil (26444 41026 224987 0) 0 nil])
([nil nil ((231 . 273) (232 . 244) (233 . 235) (234 . 240) (235 . 236) (397 . 397) (397 . 407) (#("reposit" 0 7 (fontified nil)) . 397) (397 . 404) (#("repository" 0 10 (fontified nil)) . -397) (397 . 407) (#("reposit" 0 7 (fontified t)) . -397) (undo-tree-id468 . -7) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -6) (undo-tree-id489 . -6) (undo-tree-id490 . -6) (undo-tree-id491 . -6) (undo-tree-id492 . -7) (undo-tree-id493 . -7) (undo-tree-id494 . -7) (undo-tree-id495 . -7) (undo-tree-id496 . -7) (undo-tree-id497 . -7) (undo-tree-id498 . -7) (undo-tree-id499 . -7) (undo-tree-id500 . -7) (undo-tree-id501 . -7) 404) nil (26444 41026 224986 0) 0 nil])
([nil nil ((470 . 473)) nil (26444 41026 224979 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -472) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) 473) nil (26444 41026 224978 0) 0 nil])
([nil nil ((#("	repository.I" 0 1 (fontified t) 1 13 (fontified t)) . 459) (undo-tree-id404 . -13) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -12) (undo-tree-id443 . -12) (undo-tree-id444 . -13) (undo-tree-id445 . -13) (undo-tree-id446 . -13) (undo-tree-id447 . -13) (undo-tree-id448 . -13) (undo-tree-id449 . -13) (undo-tree-id450 . -13) (undo-tree-id451 . -13) (undo-tree-id452 . -13) (undo-tree-id453 . -13) (undo-tree-id454 . -13) (undo-tree-id455 . -13) (undo-tree-id456 . -13) (undo-tree-id457 . -13) (undo-tree-id458 . -13)) nil (26444 41026 224976 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -458) (undo-tree-id336 . -1) (undo-tree-id337 . 1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 459) nil (26444 41026 224962 0) 0 nil])
([nil nil ((#("	\"github.com/mandriota/bridge-discord-bot/internal/repository\"" 0 1 (fontified t) 1 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 49 (face font-lock-string-face fontified t) 49 50 (face font-lock-string-face fontified t) 50 52 (face font-lock-string-face fontified t) 52 53 (face font-lock-string-face fontified t) 53 59 (face font-lock-string-face fontified t) 59 60 (face font-lock-string-face fontified t) 60 61 (face font-lock-string-face fontified t) 61 62 (face font-lock-string-face fontified t)) . 237) (undo-tree-id511 . -62) (undo-tree-id512 . -62) (undo-tree-id513 . -62) (undo-tree-id514 . -62) (undo-tree-id515 . -62) (undo-tree-id516 . -62) (t 26444 41026 230224 624000)) nil (26444 41028 969691 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -236) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) 237) nil (26444 41028 969688 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 87) (#("o" 0 1 (fontified t)) . -1007) (apply deactivate-cursor-after-undo 87) (apply activate-cursor-for-undo 86) (#("o" 0 1 (fontified t)) . -954) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (#("o" 0 1 (fontified t)) . -901) (apply deactivate-cursor-after-undo 85) (#("o" 0 1 (fontified t)) . -837) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) 838 (t 26444 41028 974667 625000)) nil (26444 41063 726401 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 87) (1010 . 1011) (apply deactivate-cursor-after-undo 87) (apply activate-cursor-for-undo 86) (956 . 957) (apply deactivate-cursor-after-undo 86) (apply activate-cursor-for-undo 85) (902 . 903) (apply deactivate-cursor-after-undo 85) (837 . 838)) nil (26444 41063 726389 0) 0 nil])
([nil nil ((#("O" 0 1 (fontified t)) . -902) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 903 (t 26444 41063 730677 4000)) nil (26444 41079 168321 0) 0 nil])
([nil nil ((902 . 903)) nil (26444 41079 168319 0) 0 nil])
([nil nil ((902 . 922) (#("OnMessageCreate" 0 1 (fontified nil) 1 15 (fontified nil)) . 902) (undo-tree-id537 . 14) (902 . 903) (#("OnGuildMessageCreate" 0 20 (fontified nil)) . -902) (902 . 922) (#("O" 0 1 (fontified t)) . -902) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) 903) nil (26444 41079 168318 0) 0 nil])
([nil nil ((apply activate-cursor-for-undo 89) (1026 . 1027) (apply deactivate-cursor-after-undo 89) (967 . 968) (apply activate-cursor-for-undo 89) (1024 . 1025) (apply deactivate-cursor-after-undo 89) (966 . 967) (apply activate-cursor-for-undo 89) (1022 . 1023) (apply deactivate-cursor-after-undo 89) (965 . 966) (apply activate-cursor-for-undo 89) (1020 . 1021) (apply deactivate-cursor-after-undo 89) (964 . 965) (apply activate-cursor-for-undo 89) (1018 . 1019) (apply deactivate-cursor-after-undo 89) (963 . 964)) nil (26444 41079 168307 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -1164) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) 1165 (t 26444 41079 172289 848000)) nil (26444 41110 294225 0) 0 nil])
([nil nil ((1164 . 1165)) nil (26444 41110 294213 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -539) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("b" 0 1 (fontified t)) . -540) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) 541 (t 26444 41110 298107 636000)) nil (26444 41113 358701 0) 0 nil])
([nil nil ((539 . 541)) nil (26444 41113 358691 0) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-function-name-face fontified t)) . -1343) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) 1344 (t 26444 41113 361906 203000)) nil (26444 41119 662978 0) 0 nil])
([nil nil ((1343 . 1344)) nil (26444 41119 662977 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-function-name-face fontified t)) . -1343) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) 1344) nil (26444 41119 662976 0) 0 nil])
([nil nil ((1343 . 1344)) nil (26444 41119 662965 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1342) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) 1343 (t 26444 41119 666269 485000)) nil (26444 41126 344183 0) 0 nil])
([nil nil ((1342 . 1344)) nil (26444 41126 344180 0) 0 nil])
([nil nil ((#("I" 0 1 (face font-lock-function-name-face fontified t)) . -1343) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) 1344) nil (26444 41126 344178 0) 0 nil])
([nil nil ((271 . 273) (t 26444 41126 347468 283000)) nil (26444 41256 278779 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1695 . 1696) (nil fontified nil 1695 . 1696) (nil fontified nil 1694 . 1695) (nil fontified nil 1690 . 1694) (nil fontified nil 1684 . 1690) (nil fontified nil 1683 . 1684) (nil fontified nil 1682 . 1683) (nil fontified nil 1681 . 1682) (nil fontified nil 1671 . 1681) (nil fontified nil 1666 . 1671) (nil fontified nil 1665 . 1666) (nil fontified nil 1648 . 1665) (nil fontified nil 1647 . 1648) (nil fontified nil 1643 . 1647) (nil fontified nil 1641 . 1643) (nil fontified nil 1639 . 1641) (nil fontified nil 1638 . 1639) (nil fontified nil 1637 . 1638) (nil fontified nil 1634 . 1637) (nil fontified nil 1632 . 1634) (nil fontified nil 1631 . 1632) (nil fontified nil 1630 . 1631) (nil fontified nil 1629 . 1630) (nil fontified nil 1628 . 1629) (nil fontified nil 1627 . 1628) (nil fontified nil 1626 . 1627) (nil fontified nil 1625 . 1626) (nil fontified nil 1624 . 1625) (nil fontified nil 1621 . 1624) (nil fontified nil 1620 . 1621) (nil fontified nil 1619 . 1620) (nil fontified nil 1618 . 1619) (nil fontified nil 1610 . 1618) (nil fontified nil 1603 . 1610) (nil fontified nil 1599 . 1603) (nil fontified nil 1593 . 1599) (nil fontified nil 1583 . 1593) (nil fontified nil 1581 . 1583) (nil fontified nil 1578 . 1581) (nil fontified nil 1576 . 1578) (nil fontified nil 1571 . 1576) (nil fontified nil 1570 . 1571) (nil fontified nil 1568 . 1570) (nil fontified nil 1557 . 1568) (nil fontified nil 1554 . 1557) (nil fontified nil 1552 . 1554) (nil fontified nil 1551 . 1552) (nil fontified nil 1549 . 1551) (nil fontified nil 1547 . 1549) (nil fontified nil 1546 . 1547) (nil fontified nil 1537 . 1546) (nil fontified nil 1533 . 1537) (nil fontified nil 1530 . 1533) (nil fontified nil 1528 . 1530) (nil fontified nil 1510 . 1528) (nil fontified nil 1502 . 1510) (nil fontified nil 1500 . 1502) (nil fontified nil 1499 . 1500) (nil fontified nil 1498 . 1499) (nil fontified nil 1495 . 1498) (nil fontified nil 1494 . 1495) (nil fontified nil 1493 . 1494) (nil fontified nil 1492 . 1493) (nil fontified nil 1483 . 1492) (nil fontified nil 1476 . 1483) (nil fontified nil 1471 . 1476) (nil fontified nil 1467 . 1471) (nil fontified nil 1458 . 1467) (nil fontified nil 1451 . 1458) (nil fontified nil 1443 . 1451) (nil fontified nil 1442 . 1443) (nil fontified nil 1440 . 1442) (nil fontified nil 1429 . 1440) (nil fontified nil 1426 . 1429) (nil fontified nil 1424 . 1426) (nil fontified nil 1423 . 1424) (nil fontified nil 1413 . 1423) (nil fontified nil 1412 . 1413) (nil fontified nil 1403 . 1412) (nil fontified nil 1399 . 1403) (nil fontified nil 1396 . 1399) (nil fontified nil 1394 . 1396) (nil fontified nil 1391 . 1394) (nil fontified nil 1376 . 1391) (nil fontified nil 1368 . 1376) (nil fontified nil 1366 . 1368) (nil fontified nil 1365 . 1366) (nil fontified nil 1364 . 1365) (nil fontified nil 1361 . 1364) (nil fontified nil 1356 . 1361) (nil fontified nil 1355 . 1356) (nil fontified nil 1354 . 1355) (nil fontified nil 1348 . 1354) (nil fontified nil 1346 . 1348) (nil fontified nil 1342 . 1346) (nil fontified nil 1337 . 1342) (nil fontified nil 1329 . 1337) (nil fontified nil 1324 . 1329) (nil fontified nil 1322 . 1324) (nil fontified nil 1321 . 1322) (nil fontified nil 1317 . 1321) (nil fontified nil 1309 . 1317) (nil fontified nil 1307 . 1309) (nil fontified nil 1302 . 1307) (nil fontified nil 1301 . 1302) (nil fontified nil 1300 . 1301) (nil fontified nil 1295 . 1300) (nil fontified nil 1287 . 1295) (nil fontified nil 1286 . 1287) (nil fontified nil 1284 . 1286) (nil fontified nil 1273 . 1284) (nil fontified nil 1268 . 1273) (nil fontified nil 1266 . 1268) (nil fontified nil 1265 . 1266) (nil fontified nil 1261 . 1265) (nil fontified nil 1246 . 1261) (nil fontified nil 1245 . 1246) (nil fontified nil 1236 . 1245) (nil fontified nil 1232 . 1236) (nil fontified nil 1227 . 1232) (nil fontified nil 1225 . 1227) (nil fontified nil 1203 . 1225) (nil fontified nil 1195 . 1203) (nil fontified nil 1187 . 1195) (nil fontified nil 1183 . 1187) (nil fontified nil 1181 . 1183) (nil fontified nil 1152 . 1181) (nil fontified nil 1149 . 1152) (nil fontified nil 1147 . 1149) (nil fontified nil 1145 . 1147) (nil fontified nil 1138 . 1145) (nil fontified nil 1135 . 1138) (nil fontified nil 1133 . 1135) (nil fontified nil 1132 . 1133) (nil fontified nil 1125 . 1132) (nil fontified nil 1116 . 1125) (nil fontified nil 1112 . 1116) (nil fontified nil 1103 . 1112) (nil fontified nil 1096 . 1103) (nil fontified nil 1088 . 1096) (nil fontified nil 1087 . 1088) (nil fontified nil 1085 . 1087) (nil fontified nil 1074 . 1085) (nil fontified nil 1071 . 1074) (nil fontified nil 1069 . 1071) (nil fontified nil 1068 . 1069) (nil fontified nil 1062 . 1068) (nil fontified nil 1061 . 1062) (nil fontified nil 1052 . 1061) (nil fontified nil 1048 . 1052) (nil fontified nil 1045 . 1048) (nil fontified nil 1043 . 1045) (nil fontified nil 1025 . 1043) (nil fontified nil 1017 . 1025) (nil fontified nil 1015 . 1017) (nil fontified nil 1010 . 1015) (nil fontified nil 1009 . 1010) (nil fontified nil 1007 . 1009) (nil fontified nil 980 . 1007) (nil fontified nil 971 . 980) (nil fontified nil 949 . 971) (nil fontified nil 948 . 949) (nil fontified nil 941 . 948) (nil fontified nil 938 . 941) (nil fontified nil 937 . 938) (nil fontified nil 929 . 937) (nil fontified nil 926 . 929) (nil fontified nil 925 . 926) (nil fontified nil 924 . 925) (nil fontified nil 923 . 924) (nil fontified nil 899 . 923) (nil fontified nil 891 . 899) (nil fontified nil 890 . 891) (nil fontified nil 876 . 890) (nil fontified nil 875 . 876) (nil fontified nil 871 . 875) (nil fontified nil 869 . 871) (nil fontified nil 845 . 869) (nil fontified nil 842 . 845) (nil fontified nil 836 . 842) (nil fontified nil 835 . 836) (nil fontified nil 834 . 835) (nil fontified nil 829 . 834) (nil fontified nil 828 . 829) (nil fontified nil 827 . 828) (nil fontified nil 826 . 827) (nil fontified nil 819 . 826) (nil fontified nil 799 . 819) (nil fontified nil 797 . 799) (nil fontified nil 786 . 797) (nil fontified nil 781 . 786) (nil fontified nil 779 . 781) (nil fontified nil 778 . 779) (nil fontified nil 773 . 778) (nil fontified nil 772 . 773) (nil fontified nil 764 . 772) (nil fontified nil 760 . 764) (nil fontified nil 755 . 760) (nil fontified nil 753 . 755) (nil fontified nil 715 . 753) (nil fontified nil 711 . 715) (nil fontified nil 704 . 711) (nil fontified nil 702 . 704) (nil fontified nil 698 . 702) (nil fontified nil 693 . 698) (nil fontified nil 685 . 693) (nil fontified nil 680 . 685) (nil fontified nil 678 . 680) (nil fontified nil 677 . 678) (nil fontified nil 646 . 677) (nil fontified nil 644 . 646) (nil fontified nil 633 . 644) (nil fontified nil 628 . 633) (nil fontified nil 626 . 628) (nil fontified nil 625 . 626) (nil fontified nil 605 . 625) (nil fontified nil 604 . 605) (nil fontified nil 596 . 604) (nil fontified nil 592 . 596) (nil fontified nil 587 . 592) (nil fontified nil 585 . 587) (nil fontified nil 547 . 585) (nil fontified nil 543 . 547) (nil fontified nil 541 . 543) (nil fontified nil 514 . 541) (nil fontified nil 509 . 514) (nil fontified nil 505 . 509) (nil fontified nil 498 . 505) (nil fontified nil 495 . 498) (nil fontified nil 493 . 495) (nil fontified nil 451 . 493) (nil fontified nil 449 . 451) (nil fontified nil 438 . 449) (nil fontified nil 435 . 438) (nil fontified nil 433 . 435) (nil fontified nil 427 . 433) (nil fontified nil 418 . 427) (nil fontified nil 414 . 418) (nil fontified nil 411 . 414) (nil fontified nil 409 . 411) (nil fontified nil 391 . 409) (nil fontified nil 383 . 391) (nil fontified nil 381 . 383) (nil fontified nil 379 . 381) (nil fontified nil 347 . 379) (nil fontified nil 341 . 347) (nil fontified nil 333 . 341) (nil fontified nil 332 . 333) (nil fontified nil 329 . 332) (nil fontified nil 324 . 329) (nil fontified nil 322 . 324) (nil fontified nil 310 . 322) (nil fontified nil 309 . 310) (nil fontified nil 304 . 309) (nil fontified nil 303 . 304) (nil fontified nil 291 . 303) (nil fontified nil 289 . 291) (nil fontified nil 282 . 289) (nil fontified nil 280 . 282) (nil fontified nil 279 . 280) (nil fontified nil 277 . 279) (nil fontified nil 273 . 277) (273 . 1696)) nil (26444 41256 278777 0) 0 nil])
([nil nil ((#("Handler) " 0 7 (face font-lock-type-face fontified t) 7 9 (fontified t)) . -282) (undo-tree-id663 . -9) (undo-tree-id664 . -9) (undo-tree-id665 . -9) (undo-tree-id666 . -9) (undo-tree-id667 . -9) (undo-tree-id668 . -9) 291) nil (26444 41256 278770 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -278) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (#("h" 0 1 (face font-lock-variable-name-face fontified t)) . -279) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (#(" " 0 1 (fontified t)) . -280) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (#("*" 0 1 (fontified t)) . -281) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) 282) nil (26444 41256 278766 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-type-face fontified t)) . -340) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) 341 (t 26444 41256 284040 366000)) nil (26444 41261 815968 0) 0 nil])
([nil nil ((340 . 341)) nil (26444 41261 815956 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -305) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) 306 (t 26444 41261 820918 707000)) nil (26444 41267 39791 0) 0 nil])
([nil nil ((305 . 306)) nil (26444 41267 39780 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -861) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) 862 (t 26444 41267 44277 600000)) nil (26444 41280 235714 0) 0 nil])
([nil nil ((861 . 862)) nil (26444 41280 235712 0) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -861) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) 862) nil (26444 41280 235710 0) 0 nil])
([nil nil ((861 . 862) (t 26444 41280 240167 58000)) nil (26444 41281 441485 0) 0 nil])
([nil nil ((1698 . 1700) (t 26444 41281 445884 985000)) nil (26444 41286 86257 0) 0 nil])
([nil nil ((1700 . 1703)) nil (26444 41286 86256 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1698) (undo-tree-id701 . -1) (undo-tree-id702 . 1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (#("	" 0 1 (fontified t)) . -1699) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (#("s" 0 1 (fontified t)) . -1700) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (#("n" 0 1 (fontified t)) . -1701) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (#("o" 0 1 (fontified t)) . -1702) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) 1703) nil (26444 41286 86253 0) 0 nil])
([nil nil ((176 . 178) (t 26444 41286 90977 544000)) nil (26444 41302 793180 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 212 . 213) (nil fontified nil 212 . 213) (nil fontified nil 178 . 212) (178 . 213)) nil (26444 41302 793180 0) 0 nil])
([nil nil ((#("gateway" 0 7 (face font-lock-string-face fontified t)) . -205) (undo-tree-id813 . -7) (undo-tree-id814 . -7) 212) nil (26444 41302 793180 0) 0 nil])
([nil nil ((205 . 209)) nil (26444 41302 793179 0) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t)) . -208) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) 209) nil (26444 41302 793178 0) 0 nil])
([nil nil ((208 . 209)) nil (26444 41302 793177 0) 0 nil])
([nil nil ((205 . 214) (#("snow" 0 4 (face font-lock-string-face fontified t)) . -205) (undo-tree-id776 . -4) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -2) (undo-tree-id781 . -2) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -3) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -3) (undo-tree-id792 . -3) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) 209) nil (26444 41302 793176 0) 0 nil])
([nil nil ((215 . 217)) nil (26444 41302 793259 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -215) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (#("	" 0 1 (fontified t)) . -216) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) 217) nil (26444 41303 994399 0) 0 nil] [nil nil ((nil rear-nonsticky nil 223 . 224) (nil fontified nil 217 . 224) (217 . 224)) ((#("gateway" 0 6 (fontified nil) 6 7 (rear-nonsticky nil fontified nil)) . 217) (undo-tree-id815 . -7) (nil rear-nonsticky t 223 . 224)) (26444 41302 793160 0) 0 nil])
([nil nil ((308 . 345) (t 26444 41303 999492 910000)) nil (26444 41310 871718 0) 0 nil])
nil
([nil nil ((#("j" 0 1 (fontified t)) . -934) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) 935 (t 26444 41310 876855 257000)) nil (26444 41353 803347 0) 0 nil])
([nil nil ((934 . 935)) nil (26444 41353 803345 0) 0 nil])
([nil nil ((168 . 179) (169 . 195) (214 . 242) (#("\"
	\"github.com/disgoorg/disgo/discord" 0 1 (face font-lock-string-face fontified t) 1 3 (fontified t) 3 37 (face font-lock-string-face fontified t)) . -307) (934 . 934) (934 . 938) (#("json" 0 1 (fontified nil) 1 4 (fontified nil)) . 934) (undo-tree-id836 . 3) (934 . 935) (#("json" 0 4 (fontified nil)) . -934) (934 . 938) (#("j" 0 1 (fontified t)) . -934) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) 935) nil (26444 41353 803464 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/disgo/snowflake\"" 0 1 (fontified t) 1 28 (face font-lock-string-face fontified t) 28 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t)) . 214) (undo-tree-id865 . -1) (undo-tree-id866 . -38) (undo-tree-id867 . -38) (undo-tree-id868 . -38) (undo-tree-id869 . -38) (undo-tree-id870 . -38) (undo-tree-id871 . -38) (t 26444 41353 991231 822000)) nil (26444 41356 757377 0) 0 nil] [nil nil ((966 . 970)) ((#("
			" 0 4 (fontified t)) . 966) (undo-tree-id853 . -4) (undo-tree-id854 . -1)) (26444 41353 803331 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -213) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) 214) nil (26444 41356 757373 0) 0 nil])
nil
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -370) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) 371 (t 26444 41356 762204 731000)) nil (26444 41358 899775 0) 0 nil])
([nil nil ((370 . 371)) nil (26444 41358 899773 0) 0 nil])
([nil nil ((237 . 257) (238 . 240) (239 . 243) (240 . 250) (362 . 362) (362 . 371) (#("snowflake" 0 9 (fontified nil)) . 362) (362 . 371) (#("snowflake" 0 9 (face font-lock-type-face fontified t)) . -362) (undo-tree-id872 . -9) (undo-tree-id873 . -8) (undo-tree-id874 . -8) (undo-tree-id875 . -8) (undo-tree-id876 . -8) (undo-tree-id877 . -8) (undo-tree-id878 . -8) (undo-tree-id879 . -9) (undo-tree-id880 . -9) (undo-tree-id881 . -9) (undo-tree-id882 . -9) (undo-tree-id883 . -9) (undo-tree-id884 . -9) (undo-tree-id885 . -9) (undo-tree-id886 . -9) (undo-tree-id887 . -9) 371) nil (26444 41358 899897 0) 0 nil])
([nil nil ((#("func initCommands(appID snowflake.ID) error {
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t) 5 17 (face font-lock-function-name-face fontified t) 17 18 (fontified t) 18 23 (face font-lock-variable-name-face fontified t) 23 24 (fontified t) 24 33 (face font-lock-type-face fontified t) 33 36 (face font-lock-type-face fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 43 (face font-lock-type-face fontified t) 43 46 (fontified t)) . 374) (undo-tree-id1821 . -46) (undo-tree-id1822 . -24) (undo-tree-id1823 . -5) (undo-tree-id1824 . -24) (undo-tree-id1825 . -24) (undo-tree-id1826 . -24) (undo-tree-id1827 . -24) (undo-tree-id1828 . -24) (undo-tree-id1829 . -24) (undo-tree-id1830 . -24) (undo-tree-id1831 . -24) (undo-tree-id1832 . -24) (undo-tree-id1833 . -24) (undo-tree-id1834 . -24) (undo-tree-id1835 . -24) (undo-tree-id1836 . -24) (undo-tree-id1837 . -33) (undo-tree-id1838 . -33) (undo-tree-id1839 . -33) (undo-tree-id1840 . -33) (undo-tree-id1841 . -33) (undo-tree-id1842 . -33) (undo-tree-id1843 . -33) (undo-tree-id1844 . -33) (undo-tree-id1845 . -33) (undo-tree-id1846 . -33) (undo-tree-id1847 . -33) (undo-tree-id1848 . -33) (undo-tree-id1849 . -33) (undo-tree-id1850 . -33) (undo-tree-id1851 . -33) (undo-tree-id1852 . -33) (undo-tree-id1853 . -33) (undo-tree-id1854 . -33) (undo-tree-id1855 . -33) (undo-tree-id1856 . -33) (undo-tree-id1857 . -33) (undo-tree-id1858 . -33) (undo-tree-id1859 . -33) (undo-tree-id1860 . -33) (undo-tree-id1861 . -33) (undo-tree-id1862 . -33) (undo-tree-id1863 . -33) (undo-tree-id1864 . -33) (undo-tree-id1865 . -33) (undo-tree-id1866 . -33) (undo-tree-id1867 . -33) (undo-tree-id1868 . -33) (undo-tree-id1869 . -33) (undo-tree-id1870 . -33) (undo-tree-id1871 . -33) (undo-tree-id1872 . -33) (undo-tree-id1873 . -33) (undo-tree-id1874 . -33) (undo-tree-id1875 . -33) (undo-tree-id1876 . -33) (undo-tree-id1877 . -33) (undo-tree-id1878 . -33) (undo-tree-id1879 . -33) (undo-tree-id1880 . -33) (undo-tree-id1881 . -33) (undo-tree-id1882 . -33) (undo-tree-id1883 . -33) (undo-tree-id1884 . -33) (undo-tree-id1885 . -33) (undo-tree-id1886 . -33) (undo-tree-id1887 . -33) (undo-tree-id1888 . -33) (undo-tree-id1889 . -33) (undo-tree-id1890 . -33) (undo-tree-id1891 . -33) (undo-tree-id1892 . -33) (undo-tree-id1893 . -33) (undo-tree-id1894 . -33) (undo-tree-id1895 . -33) (undo-tree-id1896 . -33) (undo-tree-id1897 . -33) (undo-tree-id1898 . -33) (undo-tree-id1899 . -33) (undo-tree-id1900 . -33) (undo-tree-id1901 . -33) (undo-tree-id1902 . -33) (undo-tree-id1903 . -33) (undo-tree-id1904 . -33) (undo-tree-id1905 . -33) (undo-tree-id1906 . -33) (undo-tree-id1907 . -33) (undo-tree-id1908 . -33) (undo-tree-id1909 . -33) (undo-tree-id1910 . -33) (undo-tree-id1911 . -33) (undo-tree-id1912 . -33) (undo-tree-id1913 . -33) (undo-tree-id1914 . -33) (undo-tree-id1915 . -33) (undo-tree-id1916 . -33) (undo-tree-id1917 . -33) (undo-tree-id1918 . -33) (undo-tree-id1919 . -33) (undo-tree-id1920 . -33) (undo-tree-id1921 . -33) (undo-tree-id1922 . -33) (undo-tree-id1923 . -33) (undo-tree-id1924 . -33) (undo-tree-id1925 . -33) (undo-tree-id1926 . -33) (undo-tree-id1927 . -33) (undo-tree-id1928 . -33) (undo-tree-id1929 . -33) (undo-tree-id1930 . -33) (undo-tree-id1931 . -46) (undo-tree-id1932 . -46) (undo-tree-id1933 . -46) (undo-tree-id1934 . -46) (undo-tree-id1935 . -46) (t 26444 41359 132437 296000)) nil (26444 41388 254747 0) 0 nil] [nil nil ((407 . 409)) ((#("
	" 0 2 (font-lock-multiline t fontified t)) . 407) (undo-tree-id894 . -2) (undo-tree-id895 . -1)) (26444 41358 899761 0) 0 nil])
([nil nil ((374 . 378)) nil (26444 41388 254716 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . -377) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) 378) nil (26444 41388 254715 0) 0 nil])
([nil nil ((377 . 378)) nil (26444 41388 254714 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -377) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) 378) nil (26444 41388 254714 0) 0 nil])
([nil nil ((377 . 379)) nil (26444 41388 254712 0) 0 nil])
([nil nil ((380 . 381) (#("	" 0 1 (fontified nil)) . 379) (undo-tree-id1791 . 1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (380 . 381)) nil (26444 41388 254712 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -390) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) 391) nil (26444 41388 254707 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1741) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (#("}" 0 1 (fontified t rear-nonsticky t)) . -1742) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) 1743) nil (26444 41388 254705 0) 0 nil])
([nil nil ((1741 . 1743)) nil (26444 41388 254702 0) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -1742) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (1743 . 1744)) nil (26444 41388 254702 0) 0 nil])
([nil nil ((#("h.rest.SetGlobalCommands(appID, commands)" 0 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t) 7 24 (face font-lock-function-name-face fontified t) 24 25 (fontified t) 25 30 (fontified t) 30 40 (fontified t) 40 41 (fontified t rear-nonsticky t)) . 1688) (undo-tree-id1612 . -2) (undo-tree-id1613 . -2) (undo-tree-id1614 . -2) (undo-tree-id1615 . -2) (undo-tree-id1616 . -2) (undo-tree-id1617 . -2) (undo-tree-id1618 . -2) (undo-tree-id1619 . -2) (undo-tree-id1620 . -2) (undo-tree-id1621 . -2) (undo-tree-id1622 . -2) (undo-tree-id1623 . -2) (undo-tree-id1624 . -2) (undo-tree-id1625 . -2) (undo-tree-id1626 . -2) (undo-tree-id1627 . -2) (undo-tree-id1628 . -2) (undo-tree-id1629 . -2) (undo-tree-id1630 . -2) (undo-tree-id1631 . -2) (undo-tree-id1632 . -2) (undo-tree-id1633 . -2) (undo-tree-id1634 . -2) (undo-tree-id1635 . -2) (undo-tree-id1636 . -2) (undo-tree-id1637 . -2) (undo-tree-id1638 . -2) (undo-tree-id1639 . -2) (undo-tree-id1640 . -2) (undo-tree-id1641 . -2) (undo-tree-id1642 . -2) (undo-tree-id1643 . -2) (undo-tree-id1644 . -2) (undo-tree-id1645 . -2) (undo-tree-id1646 . -2) (undo-tree-id1647 . -2) (undo-tree-id1648 . -2) (undo-tree-id1649 . -2) (undo-tree-id1650 . -2) (undo-tree-id1651 . -2) (undo-tree-id1652 . -2) (undo-tree-id1653 . -2) (undo-tree-id1654 . -2) (undo-tree-id1655 . -2) (undo-tree-id1656 . -2) (undo-tree-id1657 . -2) (undo-tree-id1658 . -2) (undo-tree-id1659 . -2) (undo-tree-id1660 . -2) (undo-tree-id1661 . -2) (undo-tree-id1662 . -2) (undo-tree-id1663 . -2) (undo-tree-id1664 . -2) (undo-tree-id1665 . -2) (undo-tree-id1666 . -2) (undo-tree-id1667 . -2) (undo-tree-id1668 . -2) (undo-tree-id1669 . -2) (undo-tree-id1670 . -2) (undo-tree-id1671 . -2) (undo-tree-id1672 . -2) (undo-tree-id1673 . -2) (undo-tree-id1674 . -2) (undo-tree-id1675 . -2) (undo-tree-id1676 . -2) (undo-tree-id1677 . -2) (undo-tree-id1678 . -2) (undo-tree-id1679 . -2) (undo-tree-id1680 . -2) (undo-tree-id1681 . -2) (undo-tree-id1682 . -2) (undo-tree-id1683 . -2) (undo-tree-id1684 . -2) (undo-tree-id1685 . -2) (undo-tree-id1686 . -2) (undo-tree-id1687 . -2) (undo-tree-id1688 . -2) (undo-tree-id1689 . -2) (undo-tree-id1690 . -2) (undo-tree-id1691 . -2) (undo-tree-id1692 . -2) (undo-tree-id1693 . -2) (undo-tree-id1694 . -2) (undo-tree-id1695 . -2) (undo-tree-id1696 . -2) (undo-tree-id1697 . -2) (undo-tree-id1698 . -2) (undo-tree-id1699 . -2) (undo-tree-id1700 . -2) (undo-tree-id1701 . -2) (undo-tree-id1702 . -2) (undo-tree-id1703 . -2) (undo-tree-id1704 . -2) (undo-tree-id1705 . -2) (undo-tree-id1706 . -2) (undo-tree-id1707 . -2) (undo-tree-id1708 . -2) (undo-tree-id1709 . -2) (undo-tree-id1710 . -2) (undo-tree-id1711 . -2) (undo-tree-id1712 . -2) (undo-tree-id1713 . -2) (undo-tree-id1714 . -2) (undo-tree-id1715 . -2) (undo-tree-id1716 . -2) (undo-tree-id1717 . -2) (undo-tree-id1718 . -2) (undo-tree-id1719 . -2) (undo-tree-id1720 . -2) (undo-tree-id1721 . -2) (undo-tree-id1722 . -2) (undo-tree-id1723 . -2) (undo-tree-id1724 . -2) (undo-tree-id1725 . -2) (undo-tree-id1726 . -2) (undo-tree-id1727 . -2) (undo-tree-id1728 . -2) (undo-tree-id1729 . -2) (undo-tree-id1730 . -2) (undo-tree-id1731 . -2) (undo-tree-id1732 . -2) (undo-tree-id1733 . -2) (undo-tree-id1734 . -2) (undo-tree-id1735 . -2) (undo-tree-id1736 . -2) (undo-tree-id1737 . -2) (undo-tree-id1738 . -2) (undo-tree-id1739 . -2) (undo-tree-id1740 . -2) (undo-tree-id1741 . -2) (undo-tree-id1742 . -2) (undo-tree-id1743 . -2) (undo-tree-id1744 . -2) (undo-tree-id1745 . -2) (undo-tree-id1746 . -2) (undo-tree-id1747 . -2) (undo-tree-id1748 . -2) (undo-tree-id1749 . -2) (undo-tree-id1750 . -2) (undo-tree-id1751 . -2) (undo-tree-id1752 . -2) (undo-tree-id1753 . -2) (undo-tree-id1754 . -2) (undo-tree-id1755 . -2) (undo-tree-id1756 . -2) (undo-tree-id1757 . -2) (undo-tree-id1758 . -2) (undo-tree-id1759 . -2) (undo-tree-id1760 . -41) (undo-tree-id1761 . -2) (undo-tree-id1762 . -8) (undo-tree-id1763 . -17) (undo-tree-id1764 . -41) (undo-tree-id1765 . -41) (undo-tree-id1766 . -41) (undo-tree-id1767 . -41) 1729) nil (26444 41388 254699 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1687) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) 1688) nil (26444 41388 254666 0) 0 nil])
([nil nil ((#("
	_, err :=
	return err" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face font-lock-variable-name-face fontified t) 3 5 (fontified t) 5 8 (face font-lock-variable-name-face fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 15 (face font-lock-keyword-face fontified t) 15 19 (face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 23 (face font-lock-variable-name-face fontified t)) . 1676) (undo-tree-id1180 . -23) (undo-tree-id1181 . -11) (undo-tree-id1182 . -11) (undo-tree-id1183 . -11) (undo-tree-id1184 . -11) (undo-tree-id1185 . -11) (undo-tree-id1186 . -11) (undo-tree-id1187 . -11) (undo-tree-id1188 . -11) (undo-tree-id1189 . -11) (undo-tree-id1190 . -11) (undo-tree-id1191 . -11) (undo-tree-id1192 . -11) (undo-tree-id1193 . -11) (undo-tree-id1194 . -11) (undo-tree-id1195 . -11) (undo-tree-id1196 . -11) (undo-tree-id1197 . -11) (undo-tree-id1198 . -11) (undo-tree-id1199 . -11) (undo-tree-id1200 . -11) (undo-tree-id1201 . -11) (undo-tree-id1202 . -11) (undo-tree-id1203 . -11) (undo-tree-id1204 . -11) (undo-tree-id1205 . -11) (undo-tree-id1206 . -11) (undo-tree-id1207 . -11) (undo-tree-id1208 . -11) (undo-tree-id1209 . -11) (undo-tree-id1210 . -11) (undo-tree-id1211 . -11) (undo-tree-id1212 . -11) (undo-tree-id1213 . -11) (undo-tree-id1214 . -11) (undo-tree-id1215 . -11) (undo-tree-id1216 . -11) (undo-tree-id1217 . -11) (undo-tree-id1218 . -11) (undo-tree-id1219 . -11) (undo-tree-id1220 . -11) (undo-tree-id1221 . -11) (undo-tree-id1222 . -11) (undo-tree-id1223 . -11) (undo-tree-id1224 . -11) (undo-tree-id1225 . -11) (undo-tree-id1226 . -11) (undo-tree-id1227 . -11) (undo-tree-id1228 . -11) (undo-tree-id1229 . -11) (undo-tree-id1230 . -11) (undo-tree-id1231 . -11) (undo-tree-id1232 . -11) (undo-tree-id1233 . -11) (undo-tree-id1234 . -11) (undo-tree-id1235 . -11) (undo-tree-id1236 . -11) (undo-tree-id1237 . -11) (undo-tree-id1238 . -11) (undo-tree-id1239 . -11) (undo-tree-id1240 . -11) (undo-tree-id1241 . -11) (undo-tree-id1242 . -11) (undo-tree-id1243 . -11) (undo-tree-id1244 . -11) (undo-tree-id1245 . -11) (undo-tree-id1246 . -11) (undo-tree-id1247 . -11) (undo-tree-id1248 . -11) (undo-tree-id1249 . -11) (undo-tree-id1250 . -11) (undo-tree-id1251 . -11) (undo-tree-id1252 . -11) (undo-tree-id1253 . -11) (undo-tree-id1254 . -11) (undo-tree-id1255 . -11) (undo-tree-id1256 . -11) (undo-tree-id1257 . -11) (undo-tree-id1258 . -11) (undo-tree-id1259 . -11) (undo-tree-id1260 . -11) (undo-tree-id1261 . -11) (undo-tree-id1262 . -11) (undo-tree-id1263 . -11) (undo-tree-id1264 . -11) (undo-tree-id1265 . -11) (undo-tree-id1266 . -11) (undo-tree-id1267 . -11) (undo-tree-id1268 . -11) (undo-tree-id1269 . -11) (undo-tree-id1270 . -11) (undo-tree-id1271 . -11) (undo-tree-id1272 . -11) (undo-tree-id1273 . -11) (undo-tree-id1274 . -11) (undo-tree-id1275 . -11) (undo-tree-id1276 . -11) (undo-tree-id1277 . -11) (undo-tree-id1278 . -11) (undo-tree-id1279 . -11) (undo-tree-id1280 . -11) (undo-tree-id1281 . -11) (undo-tree-id1282 . -11) (undo-tree-id1283 . -11) (undo-tree-id1284 . -11) (undo-tree-id1285 . -11) (undo-tree-id1286 . -11) (undo-tree-id1287 . -11) (undo-tree-id1288 . -11) (undo-tree-id1289 . -11) (undo-tree-id1290 . -11) (undo-tree-id1291 . -11) (undo-tree-id1292 . -11) (undo-tree-id1293 . -11) (undo-tree-id1294 . -11) (undo-tree-id1295 . -11) (undo-tree-id1296 . -11) (undo-tree-id1297 . -11) (undo-tree-id1298 . -11) (undo-tree-id1299 . -11) (undo-tree-id1300 . -11) (undo-tree-id1301 . -11) (undo-tree-id1302 . -11) (undo-tree-id1303 . -11) (undo-tree-id1304 . -11) (undo-tree-id1305 . -11) (undo-tree-id1306 . -11) (undo-tree-id1307 . -11) (undo-tree-id1308 . -11) (undo-tree-id1309 . -11) (undo-tree-id1310 . -11) (undo-tree-id1311 . -11) (undo-tree-id1312 . -11) (undo-tree-id1313 . -11) (undo-tree-id1314 . -11) (undo-tree-id1315 . -11) (undo-tree-id1316 . -11) (undo-tree-id1317 . -11) (undo-tree-id1318 . -11) (undo-tree-id1319 . -11) (undo-tree-id1320 . -11) (undo-tree-id1321 . -11) (undo-tree-id1322 . -11) (undo-tree-id1323 . -11) (undo-tree-id1324 . -11) (undo-tree-id1325 . -11) (undo-tree-id1326 . -11) (undo-tree-id1327 . -11) (undo-tree-id1328 . -11) (undo-tree-id1329 . -1) (undo-tree-id1330 . -3) (undo-tree-id1331 . -2) (undo-tree-id1332 . -3) (undo-tree-id1333 . -2) (undo-tree-id1334 . -3) (undo-tree-id1335 . -2) (undo-tree-id1336 . -3) (undo-tree-id1337 . -4) (undo-tree-id1338 . -8) (undo-tree-id1339 . -5) (undo-tree-id1340 . -8) (undo-tree-id1341 . -5) (undo-tree-id1342 . -8) (undo-tree-id1343 . -5) (undo-tree-id1344 . -8) (undo-tree-id1345 . -19) (undo-tree-id1346 . -23) (undo-tree-id1347 . -20) (undo-tree-id1348 . -23) (undo-tree-id1349 . -20) (undo-tree-id1350 . -23) (undo-tree-id1351 . -20) (undo-tree-id1352 . -23) (undo-tree-id1353 . -23) (undo-tree-id1354 . -23) (undo-tree-id1355 . -23) (undo-tree-id1356 . -23) (undo-tree-id1357 . -23) (undo-tree-id1358 . -23) (undo-tree-id1359 . -19) (undo-tree-id1360 . -23) (undo-tree-id1361 . -20) (undo-tree-id1362 . -23) (undo-tree-id1363 . -20) (undo-tree-id1364 . -23) (undo-tree-id1365 . -20) (undo-tree-id1366 . -23) (undo-tree-id1367 . -23) (undo-tree-id1368 . -19) (undo-tree-id1369 . -23) (undo-tree-id1370 . -20) (undo-tree-id1371 . -23) (undo-tree-id1372 . -20) (undo-tree-id1373 . -23) (undo-tree-id1374 . -20) (undo-tree-id1375 . -23) (undo-tree-id1376 . -1) (undo-tree-id1377 . -3) (undo-tree-id1378 . -2) (undo-tree-id1379 . -3) (undo-tree-id1380 . -2) (undo-tree-id1381 . -3) (undo-tree-id1382 . -2) (undo-tree-id1383 . -3) (undo-tree-id1384 . -4) (undo-tree-id1385 . -8) (undo-tree-id1386 . -5) (undo-tree-id1387 . -8) (undo-tree-id1388 . -5) (undo-tree-id1389 . -8) (undo-tree-id1390 . -5) (undo-tree-id1391 . -8) (undo-tree-id1392 . -19) (undo-tree-id1393 . -23) (undo-tree-id1394 . -20) (undo-tree-id1395 . -23) (undo-tree-id1396 . -20) (undo-tree-id1397 . -23) (undo-tree-id1398 . -20) (undo-tree-id1399 . -23) (undo-tree-id1400 . -11) (undo-tree-id1401 . -11) (undo-tree-id1402 . -11) (undo-tree-id1403 . -11) (undo-tree-id1404 . -11) (undo-tree-id1405 . -11) (undo-tree-id1406 . -11) (undo-tree-id1407 . -11) (undo-tree-id1408 . -11) (undo-tree-id1409 . -11) (undo-tree-id1410 . -1) (undo-tree-id1411 . -3) (undo-tree-id1412 . -2) (undo-tree-id1413 . -3) (undo-tree-id1414 . -2) (undo-tree-id1415 . -3) (undo-tree-id1416 . -2) (undo-tree-id1417 . -3) (undo-tree-id1418 . -4) (undo-tree-id1419 . -8) (undo-tree-id1420 . -5) (undo-tree-id1421 . -8) (undo-tree-id1422 . -5) (undo-tree-id1423 . -8) (undo-tree-id1424 . -5) (undo-tree-id1425 . -8) (undo-tree-id1426 . -11) (undo-tree-id1427 . -1) (undo-tree-id1428 . -3) (undo-tree-id1429 . -2) (undo-tree-id1430 . -3) (undo-tree-id1431 . -2) (undo-tree-id1432 . -3) (undo-tree-id1433 . -2) (undo-tree-id1434 . -3) (undo-tree-id1435 . -4) (undo-tree-id1436 . -8) (undo-tree-id1437 . -5) (undo-tree-id1438 . -8) (undo-tree-id1439 . -5) (undo-tree-id1440 . -8) (undo-tree-id1441 . -5) (undo-tree-id1442 . -8) (undo-tree-id1443 . -11) (undo-tree-id1444 . -11) (undo-tree-id1445 . -11) (undo-tree-id1446 . -23) (undo-tree-id1447 . -23) (undo-tree-id1448 . -11) (undo-tree-id1449 . -23) (undo-tree-id1450 . -11)) nil (26444 41388 254626 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1675) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) 1676) nil (26444 41388 254562 0) 0 nil])
([nil nil ((#("	\"github.com/disgoorg/snowflake/v2\"" 0 1 (fontified t) 1 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face rear-nonsticky t fontified t)) . 242) (undo-tree-id1946 . -35) (undo-tree-id1947 . -35) (undo-tree-id1948 . -35) (undo-tree-id1949 . -35) (undo-tree-id1950 . -35) (undo-tree-id1951 . -35) (undo-tree-id1952 . -35) (t 26444 41388 259827 576000)) nil (26444 41392 91139 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -241) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) 242) nil (26444 41392 91136 0) 0 nil])
([nil nil ((2704 . 2705) (#("	" 0 1 (fontified nil)) . 2703) (2703 . 2704) (2703 . 2704) (t 26444 41392 96432 405000)) nil (26444 41414 685891 0) 0 nil])
([nil nil ((2705 . 2706)) nil (26444 41414 685891 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -2705) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) 2706) nil (26444 41414 685890 0) 0 nil])
([nil nil ((2705 . 2717)) nil (26444 41414 685889 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2716) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) 2717) nil (26444 41414 685889 0) 0 nil])
([nil nil ((2716 . 2720)) nil (26444 41414 685886 0) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -2719) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) 2720) nil (26444 41414 685886 0) 0 nil])
([nil nil ((2719 . 2720)) nil (26444 41414 685883 0) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -2719) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) 2720) nil (26444 41414 685882 0) 0 nil])
([nil nil ((2719 . 2720)) nil (26444 41414 685880 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2718) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (#("." 0 1 (fontified t)) . -2719) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) 2720) nil (26444 41414 685879 0) 0 nil])
([nil nil ((2718 . 2722)) nil (26444 41414 685873 0) 0 nil])
([nil nil ((2719 . 2736) (#("Set" 0 3 (fontified nil)) . 2719) (2719 . 2722) (#("SetGlobalCommands" 0 17 (fontified nil)) . -2719) (2719 . 2736) (#("Set" 0 3 (fontified t)) . -2719) (undo-tree-id1953 . -3) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -2) (undo-tree-id1959 . -2) (undo-tree-id1960 . -2) (undo-tree-id1961 . -2) (undo-tree-id1962 . -3) (undo-tree-id1963 . -3) (undo-tree-id1964 . -3) (undo-tree-id1965 . -3) (undo-tree-id1966 . -3) (undo-tree-id1967 . -3) (undo-tree-id1968 . -3) (undo-tree-id1969 . -3) (undo-tree-id1970 . -3) (undo-tree-id1971 . -3) 2722) nil (26444 41414 685872 0) 0 nil])
([nil nil ((2736 . 2738)) nil (26444 41414 685861 0) 0 nil])
([nil nil ((2737 . 2745)) nil (26444 41414 685858 0) 0 nil])
([nil nil ((2737 . 2758) (t 26444 41414 692267 797000)) nil (26444 41423 744391 0) 0 nil])
([nil nil ((2758 . 2761)) nil (26444 41423 744388 0) 0 nil])
([nil nil ((#("	handler.InitCommands(client.ApplicationID())" 0 1 (fontified t) 1 9 (fontified t) 9 10 (face font-lock-function-name-face fontified t) 10 21 (face font-lock-function-name-face fontified t) 21 29 (fontified t) 29 42 (face font-lock-function-name-face fontified t) 42 45 (fontified t)) . 2771) (undo-tree-id2034 . -45) (undo-tree-id2035 . -45) (undo-tree-id2036 . -45) (undo-tree-id2037 . -45) (undo-tree-id2038 . -45) (undo-tree-id2039 . -45) (undo-tree-id2040 . -45) (undo-tree-id2041 . -45) (undo-tree-id2042 . -45) (t 26444 41423 749773 757000)) nil (26444 41426 104562 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2770) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) 2771) nil (26444 41426 104558 0) 0 nil])
([nil nil ((1767 . 1768) (#("	" 0 1 (fontified nil)) . 1766) (1766 . 1767) (1766 . 1767) (t 26444 41426 109956 492000)) nil (26444 41455 727627 0) 0 nil])
([nil nil ((1768 . 1771)) nil (26444 41455 727627 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1768) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (#("d" 0 1 (fontified t)) . -1769) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (#("p" 0 1 (fontified t)) . -1770) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) 1771) nil (26444 41455 727626 0) 0 nil])
([nil nil ((1768 . 1773)) nil (26444 41455 727617 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1771) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (#("s" 0 1 (fontified t)) . -1772) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) 1773) nil (26444 41455 727617 0) 0 nil])
([nil nil ((#("rpe" 0 3 (fontified t)) . -1768) (undo-tree-id2168 . -3) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -2) (undo-tree-id2173 . -2) (undo-tree-id2174 . -3) (undo-tree-id2175 . -3) (undo-tree-id2176 . -3) (undo-tree-id2177 . -3) (undo-tree-id2178 . -3) (undo-tree-id2179 . -3) (undo-tree-id2180 . -3) (undo-tree-id2181 . -3) (undo-tree-id2182 . -3) (undo-tree-id2183 . -3) (undo-tree-id2184 . -3) (undo-tree-id2185 . -3) (undo-tree-id2186 . -3) (undo-tree-id2187 . -3) (undo-tree-id2188 . -3) (undo-tree-id2189 . -3) (undo-tree-id2190 . -3) (undo-tree-id2191 . -3) (undo-tree-id2192 . -3) (undo-tree-id2193 . -3) (undo-tree-id2194 . -3) (undo-tree-id2195 . -3) (undo-tree-id2196 . -3) (undo-tree-id2197 . -3) (undo-tree-id2198 . -3) 1771) nil (26444 41455 727611 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1766) (undo-tree-id2043 . -1) (undo-tree-id2044 . 1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (#("	" 0 1 (fontified t)) . -1767) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) 1768) nil (26444 41455 727601 0) 0 nil])
([nil nil ((1767 . 1768) (#("	" 0 1 (fontified nil)) . 1766) (1766 . 1767) (1766 . 1767) (t 26444 41455 733708 306000)) nil (26444 41588 728445 0) 0 nil])
([nil nil ((1768 . 1770)) nil (26444 41588 728445 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1766) (undo-tree-id2337 . -1) (undo-tree-id2338 . 1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (#("	" 0 1 (fontified t)) . -1767) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (#("i" 0 1 (fontified t)) . -1768) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (#("n" 0 1 (fontified t)) . -1769) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) 1770) nil (26444 41588 728444 0) 0 nil])
([nil nil ((1767 . 1768) (#("	" 0 1 (fontified nil)) . 1766) (1766 . 1767) (1766 . 1767)) nil (26444 41588 728430 0) 0 nil])
([nil nil ((1768 . 1773)) nil (26444 41588 728430 0) 0 nil])
([nil nil ((296 . 338) (297 . 309) (298 . 300) (299 . 305) (300 . 301) (1768 . 1768) (1768 . 1778) (#("repos" 0 5 (fontified nil)) . 1768) (1768 . 1773) (#("repository" 0 10 (fontified nil)) . -1768) (1768 . 1778) (#("repos" 0 5 (fontified t)) . -1768) (undo-tree-id2312 . -5) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -2) (undo-tree-id2317 . -2) (undo-tree-id2318 . -2) (undo-tree-id2319 . -2) (undo-tree-id2320 . -3) (undo-tree-id2321 . -3) (undo-tree-id2322 . -3) (undo-tree-id2323 . -3) (undo-tree-id2324 . -4) (undo-tree-id2325 . -4) (undo-tree-id2326 . -5) (undo-tree-id2327 . -5) (undo-tree-id2328 . -5) (undo-tree-id2329 . -5) (undo-tree-id2330 . -5) (undo-tree-id2331 . -5) (undo-tree-id2332 . -5) (undo-tree-id2333 . -5) (undo-tree-id2334 . -5) (undo-tree-id2335 . -5) (undo-tree-id2336 . -5) 1773) nil (26444 41588 728429 0) 0 nil])
([nil nil ((1841 . 1843)) nil (26444 41588 728422 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1841) (undo-tree-id2303 . -1) (undo-tree-id2304 . 1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (#("	" 0 1 (fontified t)) . -1842) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) 1843) nil (26444 41588 728422 0) 0 nil])
([nil nil ((1841 . 1846)) nil (26444 41588 728419 0) 0 nil])
([nil nil ((1842 . 1848) (#("Init" 0 4 (fontified nil)) . 1842) (1842 . 1846) (#("InitDB" 0 6 (fontified nil)) . -1842) (1842 . 1848) (#("Init" 0 4 (fontified t)) . -1842) (undo-tree-id2280 . -4) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -2) (undo-tree-id2286 . -2) (undo-tree-id2287 . -2) (undo-tree-id2288 . -2) (undo-tree-id2289 . -3) (undo-tree-id2290 . -3) (undo-tree-id2291 . -3) (undo-tree-id2292 . -3) (undo-tree-id2293 . -4) (undo-tree-id2294 . -4) (undo-tree-id2295 . -4) (undo-tree-id2296 . -4) (undo-tree-id2297 . -4) (undo-tree-id2298 . -4) (undo-tree-id2299 . -4) (undo-tree-id2300 . -4) (undo-tree-id2301 . -4) (undo-tree-id2302 . -4) 1846) nil (26444 41588 728419 0) 0 nil])
([nil nil ((1848 . 1850)) nil (26444 41588 728412 0) 0 nil])
([nil nil ((1849 . 1850)) nil (26444 41588 728412 0) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1849) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) 1850) nil (26444 41588 728412 0) 0 nil])
([nil nil ((1849 . 1854)) nil (26444 41588 728410 0) 0 nil])
([nil nil ((1854 . 1866)) nil (26444 41588 728410 0) 0 nil])
([nil nil ((1866 . 1867)) nil (26444 41588 728410 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -1866) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) 1867) nil (26444 41588 728409 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1878 . 1879) (nil fontified nil 1866 . 1879) (1866 . 1879)) nil (26444 41588 728396 0) 0 nil])
([nil nil ((#("	repository.InitDB(ctx, handler.DB, \"messages.db\")" 0 1 (fontified t) 1 12 (fontified t) 12 18 (face font-lock-function-name-face fontified t) 18 36 (fontified t) 36 48 (face font-lock-string-face fontified t) 48 49 (face font-lock-string-face rear-nonsticky t fontified t) 49 50 (fontified t)) . 1830) (undo-tree-id2488 . -36) (undo-tree-id2489 . -34) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -11) (undo-tree-id2513 . -11) (undo-tree-id2514 . -11) (undo-tree-id2515 . -12) (undo-tree-id2516 . -12) (undo-tree-id2517 . -12) (undo-tree-id2518 . -12) (undo-tree-id2519 . -12) (undo-tree-id2520 . -12) (undo-tree-id2521 . -12) (undo-tree-id2522 . -12) (undo-tree-id2523 . -12) (undo-tree-id2524 . -12) (undo-tree-id2525 . -12) (undo-tree-id2526 . -12) (undo-tree-id2527 . -12) (undo-tree-id2528 . -12) (undo-tree-id2529 . -12) (undo-tree-id2530 . -12) (undo-tree-id2531 . -12) (undo-tree-id2532 . -12) (undo-tree-id2533 . -12) (undo-tree-id2534 . -12) (undo-tree-id2535 . -19) (undo-tree-id2536 . -19) (undo-tree-id2537 . -19) (undo-tree-id2538 . -23) (undo-tree-id2539 . 1) (undo-tree-id2540 . -36) (undo-tree-id2541 . -36) (undo-tree-id2542 . -36) (undo-tree-id2543 . -36) (undo-tree-id2544 . -49) (undo-tree-id2545 . -49) (undo-tree-id2546 . -50) (undo-tree-id2547 . -50) (undo-tree-id2548 . -50) (undo-tree-id2549 . -50) (undo-tree-id2550 . -50) (undo-tree-id2551 . -50) (t 26444 41588 733879 307000)) nil (26444 41594 96887 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1829) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) 1830) nil (26444 41594 96871 0) 0 nil])
([nil nil ((#("handler.initDB(\"messages.db\");" 0 8 (fontified t) 8 14 (face font-lock-function-name-face fontified t) 14 15 (fontified t) 15 28 (face font-lock-string-face fontified t) 28 30 (fontified t)) . -1841) (undo-tree-id2403 . -30) (undo-tree-id2404 . -30) (undo-tree-id2405 . -15) (undo-tree-id2406 . -28) (undo-tree-id2407 . -7) (undo-tree-id2408 . -7) (undo-tree-id2409 . -8) (undo-tree-id2410 . -14) (undo-tree-id2411 . -15) (undo-tree-id2412 . -24) (undo-tree-id2413 . -25) (undo-tree-id2414 . -27) (undo-tree-id2415 . -28) (undo-tree-id2416 . -29) (undo-tree-id2417 . -30) (undo-tree-id2418 . -30) (undo-tree-id2419 . -30) (undo-tree-id2420 . -30) (undo-tree-id2421 . -30) 1871) nil (26444 41594 96854 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1890 . 1891) (nil fontified nil 1890 . 1891) (nil fontified nil 1889 . 1890) (nil fontified nil 1877 . 1889) (nil fontified nil 1859 . 1877) (nil fontified nil 1853 . 1859) (nil fontified nil 1842 . 1853) (nil fontified nil 1841 . 1842) (1841 . 1891)) nil (26444 41594 96842 0) 0 nil])
([nil nil ((1891 . 1892)) nil (26444 41594 96839 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1840) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (#("	" 0 1 (fontified t)) . -1841) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) 1842 (t 26444 41594 102300 391000)) nil (26444 41595 635626 0) 0 nil])
([nil nil ((1840 . 1841) (t 26444 41595 640081 14000)) nil (26444 41924 199016 0) 0 nil])
([nil current ((1864 . 1865) (t 26444 41927 480607 792000)) nil (26444 42003 223533 0) 0 nil] [nil nil ((1012 . 1028) 1841 (t 26444 41596 220307 788000)) (("                " . 1012) (t 26444 41597 273030 5000)) (26444 41923 154002 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1859 . 1860) (nil fontified nil 1850 . 1860) (1850 . 1860) (t 26444 41597 273030 5000)) ((#("handler.DB" 0 7 (face font-lock-variable-name-face fontified nil) 7 9 (fontified nil) 9 10 (rear-nonsticky nil fontified nil)) . 1850) (undo-tree-id2600 . -10) (undo-tree-id2601 . -10) (undo-tree-id2602 . -10) (nil rear-nonsticky t 1859 . 1860)) (26444 41922 831427 0) 0 nil] [nil nil ((#("handler.DB" 0 10 (fontified t)) . 1880) (undo-tree-id2585 . -10) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -7) (undo-tree-id2593 . -7) (undo-tree-id2594 . -8) (undo-tree-id2595 . -10) (undo-tree-id2596 . -10) (undo-tree-id2597 . -10) (undo-tree-id2598 . -10) 1890 (t 26444 41597 273030 5000)) ((1880 . 1890)) (26444 41919 783371 0) 0 nil])
([nil nil ((1860 . 1862)) ((#(", " 0 2 (fontified t)) . 1860) (undo-tree-id2599 . -2)) (26444 41922 831282 0) 0 nil])
nil
nil
